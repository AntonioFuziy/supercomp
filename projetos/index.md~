# Maximin Share

Dados `M` objetos com valor `V[i], i=1..M` e `N` pessoas, desejamos dividir estes objetos de maneira mais igualitária possível. Como não é possível "quebrar" objetos, naturalmente alguns ficarão com objetos de maior valor que os outros. Nosso objetivo neste projeto é definir qual seria o *menor valor que uma pessoa deveria aceitar nesta divisão*.

Para fazer isso vamos usar o seguinte procedimento: uma pessoa do grupo será responsável por fazer a divisão dos objetos em `N` grupos. Porém, ela deverá permitir que **todas as outras `N-1` pessoas escolham primeiro qual grupo elas desejam**. Ou seja, a pessoa que fez a divisão naturalmente ficará com o grupo de menor valor. Portanto nosso objetivo será **maximizar** o valor do grupo de **menor** valor. Chamaremos este valor de *MMS* e o a atribuição que o gera de *divisão 1 de n*.

Vejamos um exemplo: separaremos 6 objetos para 3 pessoas. Os valores dos objetos são `{20, 11, 9, 13, 14, 37}`. Uma possível divisão seria

```
{37}
{20, 11}
{14, 13, 9}
```

Com esta divisão, o menor valor seria o do segundo grupo (31). Note que várias divisões são possíveis:

```
{37}
{20, 14}
{13, 11, 9}
```

Nesta outra divisão o menor valor é o do terceiro grupo (33). Portanto, entre essas duas divisões a segunda é melhor, já que a pessoa que dividiu ganharia um valor maior.

Usaremos este problema na disciplina por uma razão bem simples: encontrar o *MMS* é uma tarefa *NP-difícil*. Ou seja, o melhor que podemos fazer neste caso para garantir a melhor solução é, no pior caso, testar todas as alocações possíveis. Claramente isso é lento, então é uma bom exemplo de aplicação de SuperComputação!

## Entrada e saída

As entradas e saídas das implementações serão padronizadas como abaixo.

**Entrada**:

```
N M
p1 ... pN
```

**Saída**:

```
MMS O
objetos da pessoa 1
...
objetos da pessoa M
```

Nos esquemas acima,

* `N` = número de objetos
* `M` = número de pessoas
* `pi` = peso do objeto i
* `MMS` = valor do grupo menos valioso
* `objetos da pessoa i` = lista dos índices dos objetos que estão com a pessoa i.

Veja os exemplos de entrada e saída na pasta `entradas` do repositório do projeto.

