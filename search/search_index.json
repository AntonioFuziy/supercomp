{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SuperComputa\u00e7\u00e3o \u00b6 Bem vindo ao curso de SuperComputa\u00e7\u00e3o 2020/2. Professor : Igor Montagner Objetivos \u00b6 Ao final da disciplina o aluno ser\u00e1 capaz de: TODO: objetivos atualizados aqui Avalia\u00e7\u00e3o \u00b6 A avalia\u00e7\u00e3o da disciplina ser\u00e1 composta por provas, projetos e atividades de acompanhamentos: Provas Intermedi\u00e1ria (PI) e Final (PF) ser\u00e3o compostas por exerc\u00edcios pr\u00e1ticos a serem feitos durante o tempo de prova; O projeto da disciplina ser\u00e1 composto por m\u00faltiplas partes. Mais detalhes na p\u00e1gina de projetos A m\u00e9dia final \u00e9 dada por 55% Projeto 45% m\u00e9dia de Provas Condi\u00e7\u00f5es de barreira M\u00e9dia de provas >= 4,5 PI, PF >= 4,0 Projeto >= 5 (n\u00e3o ser\u00e3o aceitos projetos atrasados) Caso estas condi\u00e7\u00f5es n\u00e3o sejam cumpridas ver detalhes na aula 01 Mesmo que todas as condi\u00e7\u00f5es acima sejam satisfeitas \u00e9 poss\u00edvel reprovar. Um desempenho abaixo do esperado em uma atividade precisa ser compensado com um desempenho melhor em outra atividade.","title":"Home"},{"location":"#supercomputacao","text":"Bem vindo ao curso de SuperComputa\u00e7\u00e3o 2020/2. Professor : Igor Montagner","title":"SuperComputa\u00e7\u00e3o"},{"location":"#objetivos","text":"Ao final da disciplina o aluno ser\u00e1 capaz de: TODO: objetivos atualizados aqui","title":"Objetivos"},{"location":"#avaliacao","text":"A avalia\u00e7\u00e3o da disciplina ser\u00e1 composta por provas, projetos e atividades de acompanhamentos: Provas Intermedi\u00e1ria (PI) e Final (PF) ser\u00e3o compostas por exerc\u00edcios pr\u00e1ticos a serem feitos durante o tempo de prova; O projeto da disciplina ser\u00e1 composto por m\u00faltiplas partes. Mais detalhes na p\u00e1gina de projetos A m\u00e9dia final \u00e9 dada por 55% Projeto 45% m\u00e9dia de Provas Condi\u00e7\u00f5es de barreira M\u00e9dia de provas >= 4,5 PI, PF >= 4,0 Projeto >= 5 (n\u00e3o ser\u00e3o aceitos projetos atrasados) Caso estas condi\u00e7\u00f5es n\u00e3o sejam cumpridas ver detalhes na aula 01 Mesmo que todas as condi\u00e7\u00f5es acima sejam satisfeitas \u00e9 poss\u00edvel reprovar. Um desempenho abaixo do esperado em uma atividade precisa ser compensado com um desempenho melhor em outra atividade.","title":"Avalia\u00e7\u00e3o"},{"location":"sobre/","text":"Burocracias \u00b6 Turma 1 (remoto) \u00b6 Hor\u00e1rios: TER - 09:45 SEX - 13:30 Atendimento SEX - 15:30 Alunos Arthur (F)Olga Raphael Iago Jorge Vitor Satyro Juan Garcia Guilherme Aliperti Gabriel Moura Matteo Isabella Victor Rachel Tarraf Bruno Plano de aulas Data Quest\u00e3o/Problema Conte\u00fado/Atividade 25/08 Introdu\u00e7\u00e3o ao curso e a tecnologias de alto desempenho Introdu\u00e7\u00e3o ao curso; Princ\u00edpios de C++; Implementa\u00e7\u00e3o de algoritmos simples; Refer\u00eancia: Pacheco Cap 2. 28/08 Considera\u00e7\u00f5es na implementa\u00e7\u00e3o de programas de alto desempenho. Passagem de argumentos por refer\u00eancia e valor; Recursos de C++. 01/09 Estrat\u00e9gias para solu\u00e7\u00e3o de problemas dificeis Introdu\u00e7\u00e3o ao projeto da disciplina; Heur\u00edsticas, busca local e global; Revis\u00e3o de complexidade computacional. 04/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades da solu\u00e7\u00e3o \u00f3tima; Vizinhan\u00e7a de solu\u00e7\u00f5es; 08/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades de geradores de n\u00fameros pseudo-aleat\u00f3rios; Algoritmos baseados em sorteios aleat\u00f3rios; Exploration vs Exploitation 11/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 15/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Busca global vs Busca local; Enumera\u00e7\u00e3o exaustiva e sua classe de problemas computacionais; Backtracking 18/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Gap de otimalidade; Simetrias; Comunica\u00e7\u00e3o de resultados de desempenho. 22/09 Acelerando a busca local Estimando a qualidade de uma solu\u00e7\u00e3o parcial; Medindo a efetividade de uma estimativa. 25/09 Indo al\u00e9m: best-first search, simetrias, competi\u00e7\u00e3o de desempenho Aula expositiva sobre melhorias poss\u00edveis al\u00e9m do branch-and-bound. 29/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 02/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 06/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 09/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a OpenMP; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 13/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Opera\u00e7\u00f5es de redu\u00e7\u00e3o e escopo de vari\u00e1veis; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 16/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo C\u00f3digo thread-safety e reentr\u00e2ncia; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 20/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a problemas IO bound; Constru\u00e7\u00f5es de alto n\u00edvel do OpenMP; Sincroniza\u00e7\u00e3o usando mutex e sem\u00e1foros.; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 23/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 27/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 30/10 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Introdu\u00e7\u00e3o a GPGPU; Refer\u00eancia: Cap 1 Kirk 03/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Arquitetura de GPU em baixo n\u00edvel: Grid, Blocos e Threads; Leitura: Cap3 Gaster, Cap 3 Kirk 06/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Processando matrizes com Cuda C, profiling de c\u00f3digo em Cuda.; Refer\u00eancia: Cap 7 Kirk 10/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Exerc\u00edcios de programa\u00e7\u00e3o em GPGPU 13/11 Quiz para PF Quiz para PF 17/11 Apresenta\u00e7\u00e3o da competi\u00e7\u00e3o final de desempenho Aula est\u00fadio para projeto 20/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 24/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 27/11 Prova Final Prova Final 01/12 Prova Final Prova Final Turma 2 (presencial) \u00b6 Hor\u00e1rios: QUA - 13:30 SEX - 07:30 Atendimento SEX - 09:30 Alunos Alessandra Alexandre Giulia Felippe Teracini Guilherme Schoueri Gobetti Sabrina (Remoto?) Plano de aulas Data Quest\u00e3o/Problema Conte\u00fado/Atividade 26/08 Introdu\u00e7\u00e3o ao curso e a tecnologias de alto desempenho Introdu\u00e7\u00e3o ao curso; Princ\u00edpios de C++; Implementa\u00e7\u00e3o de algoritmos simples; Refer\u00eancia: Pacheco Cap 2. 28/08 Considera\u00e7\u00f5es na implementa\u00e7\u00e3o de programas de alto desempenho. Passagem de argumentos por refer\u00eancia e valor; Recursos de C++. 02/09 Estrat\u00e9gias para solu\u00e7\u00e3o de problemas dificeis Introdu\u00e7\u00e3o ao projeto da disciplina; Heur\u00edsticas, busca local e global; Revis\u00e3o de complexidade computacional. 04/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades da solu\u00e7\u00e3o \u00f3tima; Vizinhan\u00e7a de solu\u00e7\u00f5es; 09/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades de geradores de n\u00fameros pseudo-aleat\u00f3rios; Algoritmos baseados em sorteios aleat\u00f3rios; Exploration vs Exploitation 11/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 16/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Busca global vs Busca local; Enumera\u00e7\u00e3o exaustiva e sua classe de problemas computacionais; Backtracking 18/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Gap de otimalidade; Simetrias; Comunica\u00e7\u00e3o de resultados de desempenho. 23/09 Acelerando a busca local Estimando a qualidade de uma solu\u00e7\u00e3o parcial; Medindo a efetividade de uma estimativa. 25/09 Indo al\u00e9m: best-first search, simetrias, competi\u00e7\u00e3o de desempenho Aula expositiva sobre melhorias poss\u00edveis al\u00e9m do branch-and-bound. 30/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 02/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 07/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 09/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a OpenMP; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 14/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Opera\u00e7\u00f5es de redu\u00e7\u00e3o e escopo de vari\u00e1veis; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 16/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo C\u00f3digo thread-safety e reentr\u00e2ncia; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 21/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a problemas IO bound; Constru\u00e7\u00f5es de alto n\u00edvel do OpenMP; Sincroniza\u00e7\u00e3o usando mutex e sem\u00e1foros.; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 23/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 28/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 30/10 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Introdu\u00e7\u00e3o a GPGPU; Refer\u00eancia: Cap 1 Kirk 04/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Arquitetura de GPU em baixo n\u00edvel: Grid, Blocos e Threads; Leitura: Cap3 Gaster, Cap 3 Kirk 06/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Processando matrizes com Cuda C, profiling de c\u00f3digo em Cuda.; Refer\u00eancia: Cap 7 Kirk 11/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Exerc\u00edcios de programa\u00e7\u00e3o em GPGPU 13/11 Quiz para PF Quiz para PF 18/11 Apresenta\u00e7\u00e3o da competi\u00e7\u00e3o final de desempenho Aula est\u00fadio para projeto 20/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 25/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 27/11 Prova Final Prova Final 02/12 Prova Final Prova Final Turma Mista (Presencial/Remoto) \u00b6 Hugo (TER 09:45, SEX 7:30)","title":"Burocracias"},{"location":"sobre/#burocracias","text":"","title":"Burocracias"},{"location":"sobre/#turma-1-remoto","text":"Hor\u00e1rios: TER - 09:45 SEX - 13:30 Atendimento SEX - 15:30 Alunos Arthur (F)Olga Raphael Iago Jorge Vitor Satyro Juan Garcia Guilherme Aliperti Gabriel Moura Matteo Isabella Victor Rachel Tarraf Bruno Plano de aulas Data Quest\u00e3o/Problema Conte\u00fado/Atividade 25/08 Introdu\u00e7\u00e3o ao curso e a tecnologias de alto desempenho Introdu\u00e7\u00e3o ao curso; Princ\u00edpios de C++; Implementa\u00e7\u00e3o de algoritmos simples; Refer\u00eancia: Pacheco Cap 2. 28/08 Considera\u00e7\u00f5es na implementa\u00e7\u00e3o de programas de alto desempenho. Passagem de argumentos por refer\u00eancia e valor; Recursos de C++. 01/09 Estrat\u00e9gias para solu\u00e7\u00e3o de problemas dificeis Introdu\u00e7\u00e3o ao projeto da disciplina; Heur\u00edsticas, busca local e global; Revis\u00e3o de complexidade computacional. 04/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades da solu\u00e7\u00e3o \u00f3tima; Vizinhan\u00e7a de solu\u00e7\u00f5es; 08/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades de geradores de n\u00fameros pseudo-aleat\u00f3rios; Algoritmos baseados em sorteios aleat\u00f3rios; Exploration vs Exploitation 11/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 15/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Busca global vs Busca local; Enumera\u00e7\u00e3o exaustiva e sua classe de problemas computacionais; Backtracking 18/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Gap de otimalidade; Simetrias; Comunica\u00e7\u00e3o de resultados de desempenho. 22/09 Acelerando a busca local Estimando a qualidade de uma solu\u00e7\u00e3o parcial; Medindo a efetividade de uma estimativa. 25/09 Indo al\u00e9m: best-first search, simetrias, competi\u00e7\u00e3o de desempenho Aula expositiva sobre melhorias poss\u00edveis al\u00e9m do branch-and-bound. 29/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 02/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 06/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 09/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a OpenMP; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 13/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Opera\u00e7\u00f5es de redu\u00e7\u00e3o e escopo de vari\u00e1veis; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 16/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo C\u00f3digo thread-safety e reentr\u00e2ncia; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 20/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a problemas IO bound; Constru\u00e7\u00f5es de alto n\u00edvel do OpenMP; Sincroniza\u00e7\u00e3o usando mutex e sem\u00e1foros.; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 23/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 27/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 30/10 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Introdu\u00e7\u00e3o a GPGPU; Refer\u00eancia: Cap 1 Kirk 03/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Arquitetura de GPU em baixo n\u00edvel: Grid, Blocos e Threads; Leitura: Cap3 Gaster, Cap 3 Kirk 06/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Processando matrizes com Cuda C, profiling de c\u00f3digo em Cuda.; Refer\u00eancia: Cap 7 Kirk 10/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Exerc\u00edcios de programa\u00e7\u00e3o em GPGPU 13/11 Quiz para PF Quiz para PF 17/11 Apresenta\u00e7\u00e3o da competi\u00e7\u00e3o final de desempenho Aula est\u00fadio para projeto 20/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 24/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 27/11 Prova Final Prova Final 01/12 Prova Final Prova Final","title":"Turma 1 (remoto)"},{"location":"sobre/#turma-2-presencial","text":"Hor\u00e1rios: QUA - 13:30 SEX - 07:30 Atendimento SEX - 09:30 Alunos Alessandra Alexandre Giulia Felippe Teracini Guilherme Schoueri Gobetti Sabrina (Remoto?) Plano de aulas Data Quest\u00e3o/Problema Conte\u00fado/Atividade 26/08 Introdu\u00e7\u00e3o ao curso e a tecnologias de alto desempenho Introdu\u00e7\u00e3o ao curso; Princ\u00edpios de C++; Implementa\u00e7\u00e3o de algoritmos simples; Refer\u00eancia: Pacheco Cap 2. 28/08 Considera\u00e7\u00f5es na implementa\u00e7\u00e3o de programas de alto desempenho. Passagem de argumentos por refer\u00eancia e valor; Recursos de C++. 02/09 Estrat\u00e9gias para solu\u00e7\u00e3o de problemas dificeis Introdu\u00e7\u00e3o ao projeto da disciplina; Heur\u00edsticas, busca local e global; Revis\u00e3o de complexidade computacional. 04/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades da solu\u00e7\u00e3o \u00f3tima; Vizinhan\u00e7a de solu\u00e7\u00f5es; 09/09 Solu\u00e7\u00f5es sub-\u00f3timas usando busca local. Propriedades de geradores de n\u00fameros pseudo-aleat\u00f3rios; Algoritmos baseados em sorteios aleat\u00f3rios; Exploration vs Exploitation 11/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 16/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Busca global vs Busca local; Enumera\u00e7\u00e3o exaustiva e sua classe de problemas computacionais; Backtracking 18/09 Buscando uma solu\u00e7\u00e3o globalmente \u00f3tima Gap de otimalidade; Simetrias; Comunica\u00e7\u00e3o de resultados de desempenho. 23/09 Acelerando a busca local Estimando a qualidade de uma solu\u00e7\u00e3o parcial; Medindo a efetividade de uma estimativa. 25/09 Indo al\u00e9m: best-first search, simetrias, competi\u00e7\u00e3o de desempenho Aula expositiva sobre melhorias poss\u00edveis al\u00e9m do branch-and-bound. 30/09 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 02/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 07/10 Prova Intermedi\u00e1ria Prova Intermedi\u00e1ria 09/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a OpenMP; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 14/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Opera\u00e7\u00f5es de redu\u00e7\u00e3o e escopo de vari\u00e1veis; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 16/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo C\u00f3digo thread-safety e reentr\u00e2ncia; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 21/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Introdu\u00e7\u00e3o a problemas IO bound; Constru\u00e7\u00f5es de alto n\u00edvel do OpenMP; Sincroniza\u00e7\u00e3o usando mutex e sem\u00e1foros.; Refer\u00eancia: Cap 5 Pacheco e Cap 7 Sterling 23/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 28/10 Programa\u00e7\u00e3o multi-core: como dividir tarefas e ganhar tempo Projeto 2 - vetoriza\u00e7\u00e3o e paraleliza\u00e7\u00e3o 30/10 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Introdu\u00e7\u00e3o a GPGPU; Refer\u00eancia: Cap 1 Kirk 04/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Arquitetura de GPU em baixo n\u00edvel: Grid, Blocos e Threads; Leitura: Cap3 Gaster, Cap 3 Kirk 06/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Processando matrizes com Cuda C, profiling de c\u00f3digo em Cuda.; Refer\u00eancia: Cap 7 Kirk 11/11 Programa\u00e7\u00e3o em GPU: e problemas que s\u00e3o massivamente paraleliz\u00e1veis? Exerc\u00edcios de programa\u00e7\u00e3o em GPGPU 13/11 Quiz para PF Quiz para PF 18/11 Apresenta\u00e7\u00e3o da competi\u00e7\u00e3o final de desempenho Aula est\u00fadio para projeto 20/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 25/11 Aula est\u00fadio para projeto Aula est\u00fadio para projeto 27/11 Prova Final Prova Final 02/12 Prova Final Prova Final","title":"Turma 2 (presencial)"},{"location":"sobre/#turma-mista-presencialremoto","text":"Hugo (TER 09:45, SEX 7:30)","title":"Turma Mista (Presencial/Remoto)"},{"location":"turmas/","text":"Divis\u00e3o de turmas \u00b6 A partir de 08/09 \u00b6 Turma 1 (remoto) \u00b6 Hor\u00e1rios: TER - 09:45 SEX - 13:30 Atendimento SEX - 15:30 Alunos \u00b6 Rachel Arthur (F)Olga Raphael Iago Jorge Vitor Satyro Juan Garcia Guilherme Aliperti Gabriel Moura Bruno Matteo Sabrina Gobetti Isabella Turma 2 (presencial) \u00b6 Hor\u00e1rios: QUA - 13:30 SEX - 07:30 Atendimento SEX - 09:30 Alunos \u00b6 Alessandra Tarraf Alexandre Giulia Felippe Teracini Guilherme Schoueri Turma Mista (Presencial/Remoto) \u00b6 Hugo (TER 09:45, SEX 7:30)","title":"Divis\u00e3o de turmas"},{"location":"turmas/#divisao-de-turmas","text":"","title":"Divis\u00e3o de turmas"},{"location":"turmas/#a-partir-de-0809","text":"","title":"A partir de 08/09"},{"location":"turmas/#turma-1-remoto","text":"Hor\u00e1rios: TER - 09:45 SEX - 13:30 Atendimento SEX - 15:30","title":"Turma 1 (remoto)"},{"location":"turmas/#alunos","text":"Rachel Arthur (F)Olga Raphael Iago Jorge Vitor Satyro Juan Garcia Guilherme Aliperti Gabriel Moura Bruno Matteo Sabrina Gobetti Isabella","title":"Alunos"},{"location":"turmas/#turma-2-presencial","text":"Hor\u00e1rios: QUA - 13:30 SEX - 07:30 Atendimento SEX - 09:30","title":"Turma 2 (presencial)"},{"location":"turmas/#alunos_1","text":"Alessandra Tarraf Alexandre Giulia Felippe Teracini Guilherme Schoueri","title":"Alunos"},{"location":"turmas/#turma-mista-presencialremoto","text":"Hugo (TER 09:45, SEX 7:30)","title":"Turma Mista (Presencial/Remoto)"},{"location":"aulas/01-introducao/","text":"01 - Aquecimento \u00b6 A disciplina utilizar\u00e1 a linguagem C++ para implementa\u00e7\u00e3o dos programas. Ela \u00e9 muito usada em implementa\u00e7\u00f5es de alto desempenho e possui recursos muito \u00fateis e que simplificam a programa\u00e7\u00e3o se comparada com C puro. Nas aulas 01 e 02 aprenderemos alguns desses recursos e os utilizaremos para implementa\u00e7\u00e3o de algoritmos simples. Gabaritos e respostas Este curso n\u00e3o fornece c\u00f3digo de resposta para os exerc\u00edcios de sala. Cada exerc\u00edcio \u00e9 acompanhado de um algoritmo em pseudo-c\u00f3digo e alguns pares de arquivos entrada/sa\u00edda. Isto j\u00e1 \u00e9 suficiente para que voc\u00eas verifiquem se sua solu\u00e7\u00e3o est\u00e1 correta. Boas pr\u00e1ticas de programa\u00e7\u00e3o ser\u00e3o demonstradas em exerc\u00edcios corrigidos pelo professor durante o semestre. Uma lista (n\u00e3o exaustiva) dessas pr\u00e1ticas estar\u00e1 dispon\u00edveis na p\u00e1gina Projeto . Compila\u00e7\u00e3o \u00b6 Programas em C++ s\u00e3o compilados com o comando g++ . Ele funciona igual ao gcc que voc\u00eas j\u00e1 usaram em Desafios e Sistemas Hardware-Software. $> g++ arquivo.cpp -o executavel Entrada e sa\u00edda em C++ \u00b6 Em C usamos as fun\u00e7\u00f5es printf para mostrar dados no terminal e scanf para ler dados. Em C++ essas fun\u00e7\u00f5es tamb\u00e9m podem ser usadas, mas em geral s\u00e3o substitu\u00eddas pelos objetos std::cin e std::cout (dispon\u00edveis no cabe\u00e7alho iostream). A maior vantagem de usar cin e cout \u00e9 que n\u00e3o precisamos mais daquelas strings de formata\u00e7\u00e3o estranhas com %d , %s e afins. Podemos passar vari\u00e1veis diretamente para a sa\u00edda do terminal usando o operador << . Veja um exemplo abaixo. int a = 10 ; double b = 3.2 ; std :: cout << \"Sa\u00edda: \" << a << \";\" << b << \" \\n \" ; Example Crie um arquivo entrada-saida.cpp com uma fun\u00e7\u00e3o main que roda o c\u00f3digo acima. Compile e execute seu programa e verifique que ele mostra o valor correto no terminal. O mesmo vale para a entrada, mas desta vez \"tiramos\" os dados do objeto std::cin . O exemplo abaixo l\u00ea um inteiro e um double do terminal. int a ; double b ; std :: cin >> a >> b ; Example Modifique seu programa entrada-saida.cpp para ler \u00ea um n\u00famero inteiro n e mostrar sua divis\u00e3o fracion\u00e1ria por 2. Ou seja, antes de dividir converta n para double . E esse std:: ? Em C++ podemos ter v\u00e1rias fun\u00e7\u00f5es, vari\u00e1veis e objetos em geral com o mesmo nome. Para evitar que eles colidam e n\u00e3o se saiba a qual estamos nos referindo cada nome deve ser definido um namespace (literalmente espaco de nomes ). Podemos ter namespace s aninhados.Por exemplo, std::chrono cont\u00e9m as fun\u00e7\u00f5es relacionadas contagem de tempo durante a execu\u00e7\u00e3o de um programa. Todas as fun\u00e7\u00f5es, classes e globais na biblioteca padr\u00e3o est\u00e3o definidas no espa\u00e7o std . Se quisermos, podemos omitir escrever std:: toda vez digitando using namespace std . Isso pode ser feito tamb\u00e9m com namespaces aninhados. A implementa\u00e7\u00e3o de algoritmos definidos usando express\u00f5es matem\u00e1ticas \u00e9 uma habilidade importante neste curso. Example Escreva um programa que receba um inteiro n e calcule a seguinte s\u00e9rie. S = \\sum_{i=0}^n \\frac{1}{2^i} S = \\sum_{i=0}^n \\frac{1}{2^i} Mostre as primeiras 15 casas decimais de S . Veja a documenta\u00e7\u00e3o de std::setprecision aqui . Resposta Essa s\u00e9rie converge para o n\u00famero 2, mas sua resposta dever\u00e1 ser sempre menor que este n\u00famero. Logo, quanto maior n mais pr\u00f3xima sua resposta ser\u00e1. Seu programa dever\u00e1 implementar algo como o algoritmo abaixo. leia inteiro n s = 0.0 para i=0 at\u00e9 n s += 1 / (2 elevado a i) print(s)","title":"01 - Aquecimento"},{"location":"aulas/01-introducao/#01-aquecimento","text":"A disciplina utilizar\u00e1 a linguagem C++ para implementa\u00e7\u00e3o dos programas. Ela \u00e9 muito usada em implementa\u00e7\u00f5es de alto desempenho e possui recursos muito \u00fateis e que simplificam a programa\u00e7\u00e3o se comparada com C puro. Nas aulas 01 e 02 aprenderemos alguns desses recursos e os utilizaremos para implementa\u00e7\u00e3o de algoritmos simples. Gabaritos e respostas Este curso n\u00e3o fornece c\u00f3digo de resposta para os exerc\u00edcios de sala. Cada exerc\u00edcio \u00e9 acompanhado de um algoritmo em pseudo-c\u00f3digo e alguns pares de arquivos entrada/sa\u00edda. Isto j\u00e1 \u00e9 suficiente para que voc\u00eas verifiquem se sua solu\u00e7\u00e3o est\u00e1 correta. Boas pr\u00e1ticas de programa\u00e7\u00e3o ser\u00e3o demonstradas em exerc\u00edcios corrigidos pelo professor durante o semestre. Uma lista (n\u00e3o exaustiva) dessas pr\u00e1ticas estar\u00e1 dispon\u00edveis na p\u00e1gina Projeto .","title":"01 - Aquecimento"},{"location":"aulas/01-introducao/#compilacao","text":"Programas em C++ s\u00e3o compilados com o comando g++ . Ele funciona igual ao gcc que voc\u00eas j\u00e1 usaram em Desafios e Sistemas Hardware-Software. $> g++ arquivo.cpp -o executavel","title":"Compila\u00e7\u00e3o"},{"location":"aulas/01-introducao/#entrada-e-saida-em-c","text":"Em C usamos as fun\u00e7\u00f5es printf para mostrar dados no terminal e scanf para ler dados. Em C++ essas fun\u00e7\u00f5es tamb\u00e9m podem ser usadas, mas em geral s\u00e3o substitu\u00eddas pelos objetos std::cin e std::cout (dispon\u00edveis no cabe\u00e7alho iostream). A maior vantagem de usar cin e cout \u00e9 que n\u00e3o precisamos mais daquelas strings de formata\u00e7\u00e3o estranhas com %d , %s e afins. Podemos passar vari\u00e1veis diretamente para a sa\u00edda do terminal usando o operador << . Veja um exemplo abaixo. int a = 10 ; double b = 3.2 ; std :: cout << \"Sa\u00edda: \" << a << \";\" << b << \" \\n \" ; Example Crie um arquivo entrada-saida.cpp com uma fun\u00e7\u00e3o main que roda o c\u00f3digo acima. Compile e execute seu programa e verifique que ele mostra o valor correto no terminal. O mesmo vale para a entrada, mas desta vez \"tiramos\" os dados do objeto std::cin . O exemplo abaixo l\u00ea um inteiro e um double do terminal. int a ; double b ; std :: cin >> a >> b ; Example Modifique seu programa entrada-saida.cpp para ler \u00ea um n\u00famero inteiro n e mostrar sua divis\u00e3o fracion\u00e1ria por 2. Ou seja, antes de dividir converta n para double . E esse std:: ? Em C++ podemos ter v\u00e1rias fun\u00e7\u00f5es, vari\u00e1veis e objetos em geral com o mesmo nome. Para evitar que eles colidam e n\u00e3o se saiba a qual estamos nos referindo cada nome deve ser definido um namespace (literalmente espaco de nomes ). Podemos ter namespace s aninhados.Por exemplo, std::chrono cont\u00e9m as fun\u00e7\u00f5es relacionadas contagem de tempo durante a execu\u00e7\u00e3o de um programa. Todas as fun\u00e7\u00f5es, classes e globais na biblioteca padr\u00e3o est\u00e3o definidas no espa\u00e7o std . Se quisermos, podemos omitir escrever std:: toda vez digitando using namespace std . Isso pode ser feito tamb\u00e9m com namespaces aninhados. A implementa\u00e7\u00e3o de algoritmos definidos usando express\u00f5es matem\u00e1ticas \u00e9 uma habilidade importante neste curso. Example Escreva um programa que receba um inteiro n e calcule a seguinte s\u00e9rie. S = \\sum_{i=0}^n \\frac{1}{2^i} S = \\sum_{i=0}^n \\frac{1}{2^i} Mostre as primeiras 15 casas decimais de S . Veja a documenta\u00e7\u00e3o de std::setprecision aqui . Resposta Essa s\u00e9rie converge para o n\u00famero 2, mas sua resposta dever\u00e1 ser sempre menor que este n\u00famero. Logo, quanto maior n mais pr\u00f3xima sua resposta ser\u00e1. Seu programa dever\u00e1 implementar algo como o algoritmo abaixo. leia inteiro n s = 0.0 para i=0 at\u00e9 n s += 1 / (2 elevado a i) print(s)","title":"Entrada e sa\u00edda em C++"},{"location":"aulas/02-desempenho/","text":"02 - Iniciando C++11 \u00b6 Nesta aula trabalharemos dois objetivos: implementa\u00e7\u00e3o de algoritmos dada uma descri\u00e7\u00e3o de alto n\u00edvel da tarefa a ser implementada t\u00e9cnicas de implementa\u00e7\u00e3o para alto desempenho Aloca\u00e7\u00e3o de mem\u00f3ria e vetores em C++ \u00b6 Em C usamos as fun\u00e7\u00f5es malloc e free para alocar mem\u00f3ria dinamicamente. Um inconveniente dessas fun\u00e7\u00f5es \u00e9 que sempre temos que passar o tamanho que queremos em bytes. Em C++ essas fun\u00e7\u00f5es tamb\u00e9m est\u00e3o dispon\u00edveis, mas us\u00e1-las \u00e9 considerado uma m\u00e1 pr\u00e1tica. Ao inv\u00e9s, usamos os operadores new e delete para alocar mem\u00f3ria. Existem duas vantagens em us\u00e1-los. Podemos escrever diretamente o tipo que queremos, em vez de seu tamanho em bytes. A aloca\u00e7\u00e3o de arrays \u00e9 feita de maneira natural usando os colchetes [] . Vejamos o exemplo abaixo. int n ; std :: cin >> n ; double * values = new double [ n ]; /* usar values aqui */ delete [] values ; \u00c9 alocado um vetor de double de tamanho n (lido do terminal). Ap\u00f3s ele ser usado liberamos o espa\u00e7o alocado usando delete[] . E se eu quiser alocar um s\u00f3 valor? \u00c9 simples! \u00c9 s\u00f3 usar new sem os colchetes [] ! Example Crie um programa que l\u00ea um n\u00famero inteiro n e depois l\u00ea n n\u00fameros fracion\u00e1rios x_i x_i . Fa\u00e7a os seguintes c\u00e1lculos e motre-os no terminal com 10 casas decimais. \\mu = \\frac{1}{n} \\sum_{i=1}^n x_i \\mu = \\frac{1}{n} \\sum_{i=1}^n x_i \\sigma^2 = \\frac{1}{n} \\sum_{i=1}^n (x_i - \\mu)^2 \\sigma^2 = \\frac{1}{n} \\sum_{i=1}^n (x_i - \\mu)^2 Resposta Use o programa t1.py para gerar entradas e sa\u00eddas de teste para seu programa. Question Voc\u00ea reconhece as f\u00f3rmulas acima? Elas calculam quais medidas estat\u00edsticas? Resposta M\u00e9dia e vari\u00e2ncia. Apesar do uso de new[] e delete[] mostrado na se\u00e7\u00e3o anterior j\u00e1 ser mais conveniente, ainda s\u00e3o essencialmente um programa em C com sintaxe ligeiramente mais agrad\u00e1vel. Para tornar a programa\u00e7\u00e3o em C++ mais produtiva sua biblioteca padr\u00e3o conta com estruturas de dados prontas para uso. A estrutura std::vector \u00e9 um vetor din\u00e2mico que tem funcionalidades parecidas com a lista de Python ou o ArrayList de Java. O c\u00f3digo abaixo exemplifica seu uso e mostra algumas de suas fun\u00e7\u00f5es. Note que omitimos o uso de std no c\u00f3digo abaixo. int n ; cin >> n ; vector < double > vec ; for ( int i = 0 ; i < n ; i ++ ) { vec . push_back ( i * i ) } cout << \"Tamanho do vetor: \" << vec . size () << \" \\n \" ; cout << \"Primeiro elemento: \" << vec . front () << \" \\n \" ; cout << \"\u00daltimo elemento: \" << vec . back () << \" \\n \" ; cout << \"Elemento 3: \" << vec [ 2 ] << \" \\n \" ; Alguns pontos interessantes deste exemplo: N\u00e3o sabemos o tamanho de vec ao cri\u00e1-lo. O m\u00e9todo push_back aumenta ele quando necess\u00e1rio e n\u00e3o precisamos nos preocupar com isso. O n\u00famero de elementos colocados no vetor \u00e9 retornado pelo m\u00e9todo size() O acesso \u00e9 feito exatamente igual ao array de C, usando os colchetes [] E esse <double> na declara\u00e7\u00e3o? Em C++ tipos passados entre < > s\u00e3o usados para parametrizar tipos gen\u00e9ricos. Ou seja, um vetor pode guardar qualquer tipo de dado e precisamos indicar qual ao cri\u00e1-lo. Note que, portanto, um vetor vector<int> e um vetor vector<double> s\u00e3o considerados de tipos diferentes e n\u00e3o posso passar o primeiro para uma fun\u00e7\u00e3o esperando o segundo. Example Modifique sua Tarefa 4 para usar vector . Verifique que o programa continua produzindo os mesmos resultados. Matrizes (vers\u00e3o 1) \u00b6 Dados N pontos com coordenadas (x_i, y_i)_{i=0}^N (x_i, y_i)_{i=0}^N , computar a matriz de dist\u00e2ncias D D tal que D_{i,j} = \\textrm{Dist\u00e2ncia entre } (x_i, y_i) \\textrm{ e } (x_j, y_j) D_{i,j} = \\textrm{Dist\u00e2ncia entre } (x_i, y_i) \\textrm{ e } (x_j, y_j) Tip Use t3.py para gerar os arquivos de entrada/sa\u00edda da tarefa abaixo. Example Implemente um programa que calcule a matriz D acima. Sua entrada dever\u00e1 estar no formato dos arquivos t3-in-*.txt e sua sa\u00edda no formato dos arquivos t3-out-*.txt . Mostre as dist\u00e2ncias com 2 casas decimais. Dicas : a maneira mais f\u00e1cil (n\u00e3o necessariamente a melhor) de alocar uma matriz \u00e9 usando um vetor em que cada elemento \u00e9 outro vetor. fa\u00e7a uma implementa\u00e7\u00e3o o mais simples poss\u00edvel. Vamos melhor\u00e1-la nas pr\u00f3ximas tarefas. Resposta leia inteiro N leia vetores X e Y seja D uma matriz NxN para i=1..N: para j=1..N: DX = X[i] - X[j] DY = Y[i] - Y[j] D[i,j] = sqrt(DX*DX + DY*DY) Question Anote abaixo o tempo de execu\u00e7\u00e3o para os arquivos t3-in-*.txt e t3-out-*.txt Question Qual \u00e9 a complexidade computacional de sua implementa\u00e7\u00e3o? Refer\u00eancias e passagem de dados \u00b6 Na parte anterior fizemos nosso programa inteiro no main . Vamos agora organiz\u00e1-lo melhor. Example Crie uma fun\u00e7\u00e3o calcula_distancias que recebe a matriz e os dados recebidos na entrada e a preenche. Sua fun\u00e7\u00e3o n\u00e3o dever\u00e1 retornar nenhum valor. Ao terminar, me\u00e7a o tempo de execu\u00e7\u00e3o para o arquivo t3-out-4.txt . Resposta Aqui podem ocorrer dois problemas: Seu programa deu \"Segmentation Fault\". Seu programa rodou at\u00e9 o fim, mas a sa\u00edda \u00e9 vazia (ou cheia de 0). O problema em si depende de como voc\u00ea fez o for duplo para mostrar os resultados. De qualquer maneira, simplesmente mover c\u00f3digo para uma outra fun\u00e7\u00e3o n\u00e3o funciona neste caso. Ambos problemas descritos na solu\u00e7\u00e3o s\u00e3o previs\u00edveis e ocorrem pela mesma raz\u00e3o: ao passar um vector para uma fun\u00e7\u00e3o \u00e9 feita uma c\u00f3pia de seu conte\u00fado . Ou seja, a matriz usada dentro de calcula_distancias n\u00e3o \u00e9 a mesma do main ! Isto \u00e9 considerado uma feature em C++ : por padr\u00e3o toda vari\u00e1vel \u00e9 passada por c\u00f3pia . Isto evita que uma fun\u00e7\u00e3o modifique um valor sem que o c\u00f3digo chamador fique sabendo. Em C podemos passar vari\u00e1veis por refer\u00eancia passando um ponteiro para elas. Apesar de funcional, isso n\u00e3o \u00e9 muito pr\u00e1tico pois temos que acessar a vari\u00e1vel sempre usando * . Em C++ temos um novo recurso: refer\u00eancias. Ao declarar uma vari\u00e1vel como uma refer\u00eancia crio uma esp\u00e9cie de ponteiro constante que sempre acessa a vari\u00e1vel apontada. Veja o exemplo abaixo. int x = 10 ; int & ref = x ; // refer\u00eancias s\u00e3o declaradas colocando & na frente do nome da vari\u00e1vel // a partir daqui ref e x representam a mesma vari\u00e1vel ref = 15 ; cout << x << \" \\n \" ; // 15 O mesmo poderia ser feito com ponteiros (como mostrado abaixo). A grande vantagem da refer\u00eancia \u00e9 que n\u00e3o precisamos usar *ref para nos referirmos \u00e0 vari\u00e1vel x ! Na atribui\u00e7\u00e3o tamb\u00e9m podemos usar direto int &ref = x , o que torna o c\u00f3digo mais limpo e f\u00e1cil de entender. int x = 10 ; int * ref = & x ; // precisamos de &x para apontar ref para a vari\u00e1vel x * ref = 15 ; // precisamos indicar *ref para atribuir a vari\u00e1vel x cout << x << \" \\n \" ; // 15 Dicas Note que uma refer\u00eancia tem que ser inicializada com a vari\u00e1vel a que ela se refere. Ou seja, ao declarar tenho que j\u00e1 indicar a vari\u00e1vel destino. Example Modifique sua fun\u00e7\u00e3o para usar refer\u00eancias. Verifique que ele volta a funcionar e que seu tempo de execu\u00e7\u00e3o continua parecido com a vers\u00e3o que rodava no main . Resposta Basta adicionar & na frente dos nomes dos argumentos (vetores x, y e matriz). A chamada da fun\u00e7\u00e3o n\u00e3o muda. Dica Em C++ precisamos estar sempre atentos a maneira que passamos os dados. Se n\u00e3o indicarmos ser\u00e1 por c\u00f3pia. Para compartilhar o mesmo objeto entre v\u00e1rias fun\u00e7\u00f5es usamos refer\u00eancias & . Uma primeira otimiza\u00e7\u00e3o \u00b6 Nossa primeira implementa\u00e7\u00e3o \u00e9 bastante direta da defini\u00e7\u00e3o e n\u00e3o tenta ser eficiente. Question Analisando a defini\u00e7ao da Tarefa 1, como seria poss\u00edvel economizar trabalho? Resposta Podemos ver que a matriz D \u00e9 sim\u00e9trica. Ou seja, D[i,j] == D[j,i] . Isso significa que poder\u00edamos calcular s\u00f3 um deles e copiar o valor para a outra posi\u00e7\u00e3o. Question Como isso poderia ser usado para melhorar o tempo de execu\u00e7\u00e3o de calcula_distancias ? Question Seu programa criado na tarefa 1 consegue ser adaptado para implementar sua ideia da quest\u00e3o anterior? O que precisaria ser modificado? Resposta Duas respostas s\u00e3o poss\u00edveis e corretas aqui: Preciso checar se o i > j e usar o valor j\u00e1 calculado de D[j,i] . \u00c9 preciso alocar a matriz inteira antes de come\u00e7ar. Se formos dando push_back linha a linha n\u00e3o conseguimos atribuir um valor ao mesmo tempo a D[i,j] e D[j,i] , j\u00e1 que um deles ainda n\u00e3o ter\u00e1 sido criado. Baseado na resposta acima vamos tentar nossa primeira otimiza\u00e7\u00e3o: s\u00f3 vamos calcular D[i,j] para i <= j (ou seja, s\u00f3 a metade \"de cima\" de D ). Example Use a estrat\u00e9gia acima para evitar calcular a matriz inteira. Verifique se houve melhora no tempo do teste t3-in-3.txt . Dica : tente de novo usar a ideia mais simples poss\u00edvel e implemente adicionando um so if no seu programa. Resposta N\u00e3o dever\u00e1 haver ganho de desempenho significativo. Veremos exatamente o por que na pr\u00f3xima aula.","title":"02 - Iniciando C++11"},{"location":"aulas/02-desempenho/#02-iniciando-c11","text":"Nesta aula trabalharemos dois objetivos: implementa\u00e7\u00e3o de algoritmos dada uma descri\u00e7\u00e3o de alto n\u00edvel da tarefa a ser implementada t\u00e9cnicas de implementa\u00e7\u00e3o para alto desempenho","title":"02 - Iniciando C++11"},{"location":"aulas/02-desempenho/#alocacao-de-memoria-e-vetores-em-c","text":"Em C usamos as fun\u00e7\u00f5es malloc e free para alocar mem\u00f3ria dinamicamente. Um inconveniente dessas fun\u00e7\u00f5es \u00e9 que sempre temos que passar o tamanho que queremos em bytes. Em C++ essas fun\u00e7\u00f5es tamb\u00e9m est\u00e3o dispon\u00edveis, mas us\u00e1-las \u00e9 considerado uma m\u00e1 pr\u00e1tica. Ao inv\u00e9s, usamos os operadores new e delete para alocar mem\u00f3ria. Existem duas vantagens em us\u00e1-los. Podemos escrever diretamente o tipo que queremos, em vez de seu tamanho em bytes. A aloca\u00e7\u00e3o de arrays \u00e9 feita de maneira natural usando os colchetes [] . Vejamos o exemplo abaixo. int n ; std :: cin >> n ; double * values = new double [ n ]; /* usar values aqui */ delete [] values ; \u00c9 alocado um vetor de double de tamanho n (lido do terminal). Ap\u00f3s ele ser usado liberamos o espa\u00e7o alocado usando delete[] . E se eu quiser alocar um s\u00f3 valor? \u00c9 simples! \u00c9 s\u00f3 usar new sem os colchetes [] ! Example Crie um programa que l\u00ea um n\u00famero inteiro n e depois l\u00ea n n\u00fameros fracion\u00e1rios x_i x_i . Fa\u00e7a os seguintes c\u00e1lculos e motre-os no terminal com 10 casas decimais. \\mu = \\frac{1}{n} \\sum_{i=1}^n x_i \\mu = \\frac{1}{n} \\sum_{i=1}^n x_i \\sigma^2 = \\frac{1}{n} \\sum_{i=1}^n (x_i - \\mu)^2 \\sigma^2 = \\frac{1}{n} \\sum_{i=1}^n (x_i - \\mu)^2 Resposta Use o programa t1.py para gerar entradas e sa\u00eddas de teste para seu programa. Question Voc\u00ea reconhece as f\u00f3rmulas acima? Elas calculam quais medidas estat\u00edsticas? Resposta M\u00e9dia e vari\u00e2ncia. Apesar do uso de new[] e delete[] mostrado na se\u00e7\u00e3o anterior j\u00e1 ser mais conveniente, ainda s\u00e3o essencialmente um programa em C com sintaxe ligeiramente mais agrad\u00e1vel. Para tornar a programa\u00e7\u00e3o em C++ mais produtiva sua biblioteca padr\u00e3o conta com estruturas de dados prontas para uso. A estrutura std::vector \u00e9 um vetor din\u00e2mico que tem funcionalidades parecidas com a lista de Python ou o ArrayList de Java. O c\u00f3digo abaixo exemplifica seu uso e mostra algumas de suas fun\u00e7\u00f5es. Note que omitimos o uso de std no c\u00f3digo abaixo. int n ; cin >> n ; vector < double > vec ; for ( int i = 0 ; i < n ; i ++ ) { vec . push_back ( i * i ) } cout << \"Tamanho do vetor: \" << vec . size () << \" \\n \" ; cout << \"Primeiro elemento: \" << vec . front () << \" \\n \" ; cout << \"\u00daltimo elemento: \" << vec . back () << \" \\n \" ; cout << \"Elemento 3: \" << vec [ 2 ] << \" \\n \" ; Alguns pontos interessantes deste exemplo: N\u00e3o sabemos o tamanho de vec ao cri\u00e1-lo. O m\u00e9todo push_back aumenta ele quando necess\u00e1rio e n\u00e3o precisamos nos preocupar com isso. O n\u00famero de elementos colocados no vetor \u00e9 retornado pelo m\u00e9todo size() O acesso \u00e9 feito exatamente igual ao array de C, usando os colchetes [] E esse <double> na declara\u00e7\u00e3o? Em C++ tipos passados entre < > s\u00e3o usados para parametrizar tipos gen\u00e9ricos. Ou seja, um vetor pode guardar qualquer tipo de dado e precisamos indicar qual ao cri\u00e1-lo. Note que, portanto, um vetor vector<int> e um vetor vector<double> s\u00e3o considerados de tipos diferentes e n\u00e3o posso passar o primeiro para uma fun\u00e7\u00e3o esperando o segundo. Example Modifique sua Tarefa 4 para usar vector . Verifique que o programa continua produzindo os mesmos resultados.","title":"Aloca\u00e7\u00e3o de mem\u00f3ria e vetores em C++"},{"location":"aulas/02-desempenho/#matrizes-versao-1","text":"Dados N pontos com coordenadas (x_i, y_i)_{i=0}^N (x_i, y_i)_{i=0}^N , computar a matriz de dist\u00e2ncias D D tal que D_{i,j} = \\textrm{Dist\u00e2ncia entre } (x_i, y_i) \\textrm{ e } (x_j, y_j) D_{i,j} = \\textrm{Dist\u00e2ncia entre } (x_i, y_i) \\textrm{ e } (x_j, y_j) Tip Use t3.py para gerar os arquivos de entrada/sa\u00edda da tarefa abaixo. Example Implemente um programa que calcule a matriz D acima. Sua entrada dever\u00e1 estar no formato dos arquivos t3-in-*.txt e sua sa\u00edda no formato dos arquivos t3-out-*.txt . Mostre as dist\u00e2ncias com 2 casas decimais. Dicas : a maneira mais f\u00e1cil (n\u00e3o necessariamente a melhor) de alocar uma matriz \u00e9 usando um vetor em que cada elemento \u00e9 outro vetor. fa\u00e7a uma implementa\u00e7\u00e3o o mais simples poss\u00edvel. Vamos melhor\u00e1-la nas pr\u00f3ximas tarefas. Resposta leia inteiro N leia vetores X e Y seja D uma matriz NxN para i=1..N: para j=1..N: DX = X[i] - X[j] DY = Y[i] - Y[j] D[i,j] = sqrt(DX*DX + DY*DY) Question Anote abaixo o tempo de execu\u00e7\u00e3o para os arquivos t3-in-*.txt e t3-out-*.txt Question Qual \u00e9 a complexidade computacional de sua implementa\u00e7\u00e3o?","title":"Matrizes (vers\u00e3o 1)"},{"location":"aulas/02-desempenho/#referencias-e-passagem-de-dados","text":"Na parte anterior fizemos nosso programa inteiro no main . Vamos agora organiz\u00e1-lo melhor. Example Crie uma fun\u00e7\u00e3o calcula_distancias que recebe a matriz e os dados recebidos na entrada e a preenche. Sua fun\u00e7\u00e3o n\u00e3o dever\u00e1 retornar nenhum valor. Ao terminar, me\u00e7a o tempo de execu\u00e7\u00e3o para o arquivo t3-out-4.txt . Resposta Aqui podem ocorrer dois problemas: Seu programa deu \"Segmentation Fault\". Seu programa rodou at\u00e9 o fim, mas a sa\u00edda \u00e9 vazia (ou cheia de 0). O problema em si depende de como voc\u00ea fez o for duplo para mostrar os resultados. De qualquer maneira, simplesmente mover c\u00f3digo para uma outra fun\u00e7\u00e3o n\u00e3o funciona neste caso. Ambos problemas descritos na solu\u00e7\u00e3o s\u00e3o previs\u00edveis e ocorrem pela mesma raz\u00e3o: ao passar um vector para uma fun\u00e7\u00e3o \u00e9 feita uma c\u00f3pia de seu conte\u00fado . Ou seja, a matriz usada dentro de calcula_distancias n\u00e3o \u00e9 a mesma do main ! Isto \u00e9 considerado uma feature em C++ : por padr\u00e3o toda vari\u00e1vel \u00e9 passada por c\u00f3pia . Isto evita que uma fun\u00e7\u00e3o modifique um valor sem que o c\u00f3digo chamador fique sabendo. Em C podemos passar vari\u00e1veis por refer\u00eancia passando um ponteiro para elas. Apesar de funcional, isso n\u00e3o \u00e9 muito pr\u00e1tico pois temos que acessar a vari\u00e1vel sempre usando * . Em C++ temos um novo recurso: refer\u00eancias. Ao declarar uma vari\u00e1vel como uma refer\u00eancia crio uma esp\u00e9cie de ponteiro constante que sempre acessa a vari\u00e1vel apontada. Veja o exemplo abaixo. int x = 10 ; int & ref = x ; // refer\u00eancias s\u00e3o declaradas colocando & na frente do nome da vari\u00e1vel // a partir daqui ref e x representam a mesma vari\u00e1vel ref = 15 ; cout << x << \" \\n \" ; // 15 O mesmo poderia ser feito com ponteiros (como mostrado abaixo). A grande vantagem da refer\u00eancia \u00e9 que n\u00e3o precisamos usar *ref para nos referirmos \u00e0 vari\u00e1vel x ! Na atribui\u00e7\u00e3o tamb\u00e9m podemos usar direto int &ref = x , o que torna o c\u00f3digo mais limpo e f\u00e1cil de entender. int x = 10 ; int * ref = & x ; // precisamos de &x para apontar ref para a vari\u00e1vel x * ref = 15 ; // precisamos indicar *ref para atribuir a vari\u00e1vel x cout << x << \" \\n \" ; // 15 Dicas Note que uma refer\u00eancia tem que ser inicializada com a vari\u00e1vel a que ela se refere. Ou seja, ao declarar tenho que j\u00e1 indicar a vari\u00e1vel destino. Example Modifique sua fun\u00e7\u00e3o para usar refer\u00eancias. Verifique que ele volta a funcionar e que seu tempo de execu\u00e7\u00e3o continua parecido com a vers\u00e3o que rodava no main . Resposta Basta adicionar & na frente dos nomes dos argumentos (vetores x, y e matriz). A chamada da fun\u00e7\u00e3o n\u00e3o muda. Dica Em C++ precisamos estar sempre atentos a maneira que passamos os dados. Se n\u00e3o indicarmos ser\u00e1 por c\u00f3pia. Para compartilhar o mesmo objeto entre v\u00e1rias fun\u00e7\u00f5es usamos refer\u00eancias & .","title":"Refer\u00eancias e passagem de dados"},{"location":"aulas/02-desempenho/#uma-primeira-otimizacao","text":"Nossa primeira implementa\u00e7\u00e3o \u00e9 bastante direta da defini\u00e7\u00e3o e n\u00e3o tenta ser eficiente. Question Analisando a defini\u00e7ao da Tarefa 1, como seria poss\u00edvel economizar trabalho? Resposta Podemos ver que a matriz D \u00e9 sim\u00e9trica. Ou seja, D[i,j] == D[j,i] . Isso significa que poder\u00edamos calcular s\u00f3 um deles e copiar o valor para a outra posi\u00e7\u00e3o. Question Como isso poderia ser usado para melhorar o tempo de execu\u00e7\u00e3o de calcula_distancias ? Question Seu programa criado na tarefa 1 consegue ser adaptado para implementar sua ideia da quest\u00e3o anterior? O que precisaria ser modificado? Resposta Duas respostas s\u00e3o poss\u00edveis e corretas aqui: Preciso checar se o i > j e usar o valor j\u00e1 calculado de D[j,i] . \u00c9 preciso alocar a matriz inteira antes de come\u00e7ar. Se formos dando push_back linha a linha n\u00e3o conseguimos atribuir um valor ao mesmo tempo a D[i,j] e D[j,i] , j\u00e1 que um deles ainda n\u00e3o ter\u00e1 sido criado. Baseado na resposta acima vamos tentar nossa primeira otimiza\u00e7\u00e3o: s\u00f3 vamos calcular D[i,j] para i <= j (ou seja, s\u00f3 a metade \"de cima\" de D ). Example Use a estrat\u00e9gia acima para evitar calcular a matriz inteira. Verifique se houve melhora no tempo do teste t3-in-3.txt . Dica : tente de novo usar a ideia mais simples poss\u00edvel e implemente adicionando um so if no seu programa. Resposta N\u00e3o dever\u00e1 haver ganho de desempenho significativo. Veremos exatamente o por que na pr\u00f3xima aula.","title":"Uma primeira otimiza\u00e7\u00e3o"},{"location":"aulas/03-profiling-e-projeto/","text":"03 - Profiling \u00b6 Software Para esta aula precisaremos dos seguintes pacotes instalados. valgrind - ferramenta de an\u00e1lise de c\u00f3digo execut\u00e1vel kcachegrind - visualizador de resultados do valgrind Medi\u00e7\u00e3o de tempo com KCachegrind \u00b6 Apesar de podermos medir o tempo que nosso programa demora usando o comando time , n\u00e3o conseguimos nenhuma informa\u00e7\u00e3o importante de qual parte do programa est\u00e1 consumindo mais tempo. Este processo de dissecar um programa e entender exatamente qual parte demora quanto \u00e9 chamada de Profiling . Demonstra\u00e7\u00e3o (Instru\u00e7\u00f5es) \u00c9 preciso compilar um execut\u00e1vel com profiling habilitado para medir os tempos. g++ -g euclides-ingenuo.cpp -o euclides-ingenuo Ap\u00f3s este passo, devemos executar o programa usando o valgrind com as op\u00e7\u00f5es abaixo. valgrind --tool=callgrind ./seu_exec < entrada > saida Para mostrar os resultados usando o kcachegrind usamos o seguinte comando. kcachegrind callgrind.out.(pid aqui) Na demonstra\u00e7\u00e3o pudemos ver que grande parte do tempo do programa da Tarefa 1 \u00e9 gasto mostrando a sa\u00edda no terminal. Isto nos leva \u00e0 primeira conclus\u00e3o da atividade de hoje: Entrada e sa\u00edda de dados s\u00e3o opera\u00e7\u00f5es muito lentas Example Fa\u00e7a o teste da demonstra\u00e7\u00e3o em seu pr\u00f3prio programa e anote abaixo, para as duas vers\u00f5es de calcula_distancias , o tempo relativo de execu\u00e7\u00e3o o n\u00famero absoluto de instru\u00e7\u00f5es executadas Question O n\u00famero absoluto de intru\u00e7\u00f5es executadas diminuiu significativamente depois de nossa otimiza\u00e7\u00e3o? Teoricamente s\u00f3 calculamos metade da matriz, esse n\u00famero \u00e9 quase metade da vers\u00e3o n\u00e3o otimizada? Voc\u00ea consegue dizer por que? Resposta Deve ter havido uma diminui\u00e7\u00e3o, mas n\u00e3o chega nem perto de metade. Isso ocorre por v\u00e1rias raz\u00f5es: nosso for duplo continua percorrendo a matriz inteira, apesar de s\u00f3 fazer o c\u00e1lculo em metade das posi\u00e7\u00f5es. alocamos a matriz elemento a elemento enquanto fazemos os c\u00e1lculos. Com isso em mente, vamos agora otimizar a fun\u00e7\u00e3o calcula_distancias . J\u00e1 sabemos que o efeito no tempo final n\u00e3o ser\u00e1 grande. Nosso objetivo ent\u00e3o ser\u00e1 verificar a seguinte afirma\u00e7\u00e3o. Dois algoritmos de mesma complexidade computacional podem ter tempos de execu\u00e7\u00e3o muito diferentes Question A resposta da quest\u00e3o anterior indica que s\u00f3 usar um if para evitar o c\u00e1lculo repetido n\u00e3o \u00e9 suficiente. Precisamos efetivamente fazer um for que percorre s\u00f3 metade da matriz. Supondo que a matriz j\u00e1 esteja inteira alocada, escreva em pseudo-c\u00f3digo como faz\u00ea-lo. Resposta para i=1..N: para j=i..N: DX = X[i] - X[j] DY = Y[i] - Y[j] DIST = sqrt(DX*DX + DY*DY) D[i,j] = DIST D[j,i] = DIST Matrizes (vers\u00e3o 2) \u00b6 Nossa implementa\u00e7\u00e3o usando vector<vector<double>> tem um problema s\u00e9rio: ela aloca elemento a elemento uma estrutura grande que j\u00e1 sabemos o tamanho de in\u00edcio. Seria muito melhor se pud\u00e9ssemos alocar todas as N^2 N^2 posi\u00e7\u00f5es da matriz de uma s\u00f3 vez! Fazemos isso trabalhando com um layout de mem\u00f3ria cont\u00ednuo. Ou seja, armazenaremos a matriz linha a linha como um \u00fanico vetor de tamanho n*n . Temos v\u00e1rias vantagens: tempo de aloca\u00e7\u00e3o de mem\u00f3ria \u00e9 reduzido, j\u00e1 que s\u00f3 fazemos uma chamada podemos acessar qualquer posi\u00e7\u00e3o a qualquer momento melhor desempenho de cache A figura abaixo exemplifica esse layout de mem\u00f3ria: Question Em uma matriz de tamanho 4x7 (4 linhas, 7 colunas), qual \u00e9 o elemento do vetor que representa a posi\u00e7\u00e3o 2x5 (linha 3, coluna 6)? Details Estamos considerando que come\u00e7amos a contar as linhas e colunas do zero. A posi\u00e7\u00e3o do vetor \u00e9 19 . Este n\u00famero \u00e9 obtido pela express\u00e3o $ i \\times c + j$ i \u00e9 a linha a ser acessada j \u00e9 a coluna c \u00e9 o n\u00famero de colunas da matriz 19 = 2 * 7 + 5 Tip Conseguimos redimensionar um vetor usando o m\u00e9todo resize , que recebe o novo n\u00famero de elementos do vetor. Example Fa\u00e7a uma terceira vers\u00e3o de calcula_distancias , desta vez usando o layout de mem\u00f3ria acima. Verifique que o programa continua retornando os mesmos resultados que as vers\u00f5es anteriores. Question Rode novamente os testes de profiling e verifique o n\u00famero de instru\u00e7\u00f5es para esta nova vers\u00e3o. Compare este valor com os anteriores e comente.","title":"03 - Profiling"},{"location":"aulas/03-profiling-e-projeto/#03-profiling","text":"Software Para esta aula precisaremos dos seguintes pacotes instalados. valgrind - ferramenta de an\u00e1lise de c\u00f3digo execut\u00e1vel kcachegrind - visualizador de resultados do valgrind","title":"03 - Profiling"},{"location":"aulas/03-profiling-e-projeto/#medicao-de-tempo-com-kcachegrind","text":"Apesar de podermos medir o tempo que nosso programa demora usando o comando time , n\u00e3o conseguimos nenhuma informa\u00e7\u00e3o importante de qual parte do programa est\u00e1 consumindo mais tempo. Este processo de dissecar um programa e entender exatamente qual parte demora quanto \u00e9 chamada de Profiling . Demonstra\u00e7\u00e3o (Instru\u00e7\u00f5es) \u00c9 preciso compilar um execut\u00e1vel com profiling habilitado para medir os tempos. g++ -g euclides-ingenuo.cpp -o euclides-ingenuo Ap\u00f3s este passo, devemos executar o programa usando o valgrind com as op\u00e7\u00f5es abaixo. valgrind --tool=callgrind ./seu_exec < entrada > saida Para mostrar os resultados usando o kcachegrind usamos o seguinte comando. kcachegrind callgrind.out.(pid aqui) Na demonstra\u00e7\u00e3o pudemos ver que grande parte do tempo do programa da Tarefa 1 \u00e9 gasto mostrando a sa\u00edda no terminal. Isto nos leva \u00e0 primeira conclus\u00e3o da atividade de hoje: Entrada e sa\u00edda de dados s\u00e3o opera\u00e7\u00f5es muito lentas Example Fa\u00e7a o teste da demonstra\u00e7\u00e3o em seu pr\u00f3prio programa e anote abaixo, para as duas vers\u00f5es de calcula_distancias , o tempo relativo de execu\u00e7\u00e3o o n\u00famero absoluto de instru\u00e7\u00f5es executadas Question O n\u00famero absoluto de intru\u00e7\u00f5es executadas diminuiu significativamente depois de nossa otimiza\u00e7\u00e3o? Teoricamente s\u00f3 calculamos metade da matriz, esse n\u00famero \u00e9 quase metade da vers\u00e3o n\u00e3o otimizada? Voc\u00ea consegue dizer por que? Resposta Deve ter havido uma diminui\u00e7\u00e3o, mas n\u00e3o chega nem perto de metade. Isso ocorre por v\u00e1rias raz\u00f5es: nosso for duplo continua percorrendo a matriz inteira, apesar de s\u00f3 fazer o c\u00e1lculo em metade das posi\u00e7\u00f5es. alocamos a matriz elemento a elemento enquanto fazemos os c\u00e1lculos. Com isso em mente, vamos agora otimizar a fun\u00e7\u00e3o calcula_distancias . J\u00e1 sabemos que o efeito no tempo final n\u00e3o ser\u00e1 grande. Nosso objetivo ent\u00e3o ser\u00e1 verificar a seguinte afirma\u00e7\u00e3o. Dois algoritmos de mesma complexidade computacional podem ter tempos de execu\u00e7\u00e3o muito diferentes Question A resposta da quest\u00e3o anterior indica que s\u00f3 usar um if para evitar o c\u00e1lculo repetido n\u00e3o \u00e9 suficiente. Precisamos efetivamente fazer um for que percorre s\u00f3 metade da matriz. Supondo que a matriz j\u00e1 esteja inteira alocada, escreva em pseudo-c\u00f3digo como faz\u00ea-lo. Resposta para i=1..N: para j=i..N: DX = X[i] - X[j] DY = Y[i] - Y[j] DIST = sqrt(DX*DX + DY*DY) D[i,j] = DIST D[j,i] = DIST","title":"Medi\u00e7\u00e3o de tempo com KCachegrind"},{"location":"aulas/03-profiling-e-projeto/#matrizes-versao-2","text":"Nossa implementa\u00e7\u00e3o usando vector<vector<double>> tem um problema s\u00e9rio: ela aloca elemento a elemento uma estrutura grande que j\u00e1 sabemos o tamanho de in\u00edcio. Seria muito melhor se pud\u00e9ssemos alocar todas as N^2 N^2 posi\u00e7\u00f5es da matriz de uma s\u00f3 vez! Fazemos isso trabalhando com um layout de mem\u00f3ria cont\u00ednuo. Ou seja, armazenaremos a matriz linha a linha como um \u00fanico vetor de tamanho n*n . Temos v\u00e1rias vantagens: tempo de aloca\u00e7\u00e3o de mem\u00f3ria \u00e9 reduzido, j\u00e1 que s\u00f3 fazemos uma chamada podemos acessar qualquer posi\u00e7\u00e3o a qualquer momento melhor desempenho de cache A figura abaixo exemplifica esse layout de mem\u00f3ria: Question Em uma matriz de tamanho 4x7 (4 linhas, 7 colunas), qual \u00e9 o elemento do vetor que representa a posi\u00e7\u00e3o 2x5 (linha 3, coluna 6)? Details Estamos considerando que come\u00e7amos a contar as linhas e colunas do zero. A posi\u00e7\u00e3o do vetor \u00e9 19 . Este n\u00famero \u00e9 obtido pela express\u00e3o $ i \\times c + j$ i \u00e9 a linha a ser acessada j \u00e9 a coluna c \u00e9 o n\u00famero de colunas da matriz 19 = 2 * 7 + 5 Tip Conseguimos redimensionar um vetor usando o m\u00e9todo resize , que recebe o novo n\u00famero de elementos do vetor. Example Fa\u00e7a uma terceira vers\u00e3o de calcula_distancias , desta vez usando o layout de mem\u00f3ria acima. Verifique que o programa continua retornando os mesmos resultados que as vers\u00f5es anteriores. Question Rode novamente os testes de profiling e verifique o n\u00famero de instru\u00e7\u00f5es para esta nova vers\u00e3o. Compare este valor com os anteriores e comente.","title":"Matrizes (vers\u00e3o 2)"},{"location":"aulas/04-projeto-heuristicas/","text":"04 - Heur\u00edsticas \u00b6 A atividade pr\u00e1tica de hoje consiste em implementar heur\u00edsticas para a solu\u00e7\u00e3o do problema da Mochila bin\u00e1ria . Resumo do problema \u00b6 Dados N objetos e uma mochila que comporta at\u00e9 W quilos, cada um com peso w_i w_i e valor v_i v_i , selecionar objetos com o maior valor poss\u00edvel que caibam dentro da mochila. Entrada : N W w1 v1 .... wN vN Sa\u00edda : W V opt o1 ... oT W - peso dos objetos selecionados V - valor dos objetos selecionados opt 0 se for usada uma heur\u00edstica ou busca local 1 se a solu\u00e7\u00e3o for \u00f3timo global oi s\u00e3o os \u00edndices ( em ordem crescente ) dos objetos selecionados Tip Arquivos para verificar a corretude das suas implementa\u00e7\u00f5es est\u00e3o dispon\u00edveis nesta pasta. Eles est\u00e3o nomeados como in-*.txt , mais-caro-out-*.txt e mais-leve-out-*.txt . Mais caro primeiro \u00b6 A ideia desta heur\u00edstica \u00e9 n\u00e3o deixar nenhum objeto valioso para tr\u00e1s! Por isso vamos ser ganaciosos e pegar primeiro os objetos mais caros ! Se um objeto valioso n\u00e3o couber passamos para os mais baratos e prosseguimos at\u00e9 examinar todos objetos. Question Escreva abaixo um algoritmo em pseudo-c\u00f3digo para implementar a heur\u00edstica descrita acima. Resposta ids = // vetor inicializado com ids[i] = i ordene os vetores ids, v e w de acordo com o vetor de valores v peso = 0 valor = 0 resposta = //vetor inicializado com 0 T = 0 // n\u00famero de objetos selecionados para i=1..N se peso + w[i] < W ent\u00e3o resposta[T] = ids[i] peso += w[i] valor += v[i] T += 1 print peso, valor, 0 print resposta[0 .. T] Question Qual \u00e9 a complexidade computacional deste algoritmo? Ele \u00e9 a melhor implementa\u00e7\u00e3o poss\u00edvel? Resposta Se o algoritmo descrito em sua resposta anterior envolver ordena\u00e7\u00e3o, ent\u00e3o ele tem complexidade \\mathcal{O}(n\\log n) \\mathcal{O}(n\\log n) e \u00e9 o melhor poss\u00edvel sim (voc\u00ea consegue explicar por que?). Se voc\u00ea fez um loop duplo que procura pelo maior a cada itera\u00e7\u00e3o ent\u00e3o seu algoritmo \u00e9 \\mathcal{O}(n^2) \\mathcal{O}(n^2) . Example Agora que temos um algoritmo, crie uma implementa\u00e7\u00e3o do programa acima. Dica : C++ j\u00e1 possui um algoritmo de ordena\u00e7\u00e3o implementado no cabe\u00e7alho <algorithm> . Use-o. Busque por ordena\u00e7\u00e3o indireta para entender como ordenar os tr\u00eas vetores ao mesmo tempo. Pode ser conveniente organizar os dados usando struct . Mais leve primeiro \u00b6 Vamos testar uma abordagem oposta: quantidade agora \u00e9 o foco . Por isso vamos ser pr\u00e1ticos e pegar o maior n\u00famero de objetos poss\u00edvel ! Come\u00e7aremos agora pelos objetos mais leves e vamos torcer para que a quantidade grande de objetos selecionados resulte em uma mochila com alto valor. Question Compare esta heur\u00edstica com a da se\u00e7\u00e3o anterior levando em conta o algoritmo em pseudo-c\u00f3digo e sua complexidade computacional. Question Quais partes do programa da heur\u00edstica anterior podem ser aproveitadas para implementar a descrita acima? Example Implemente agora a heur\u00edstica do mais leve. Chame seu programa de mais_leve , mantendo tamb\u00e9m o c\u00f3digo do anterior. Analisando nossas heur\u00edsticas \u00b6 Question Crie uma entrada em que a heur\u00edstica do mais valioso seja muito melhor que a do mais leve. Escreva abaixo as sa\u00eddas de cada programa. Question Crie uma entrada em que a heur\u00edstica do mais leve seja muito melhor que a do mais valioso. Escreva abaixo as sa\u00eddas de cada programa. Question Com base nas suas respostas acima, em quais situa\u00e7\u00f5es a heur\u00edstica do mais valioso \u00e9 melhor? Question Com base nas suas respostas acima, em quais situa\u00e7\u00f5es a heur\u00edstica do mais leve \u00e9 melhor?","title":"04 - Heur\u00edsticas"},{"location":"aulas/04-projeto-heuristicas/#04-heuristicas","text":"A atividade pr\u00e1tica de hoje consiste em implementar heur\u00edsticas para a solu\u00e7\u00e3o do problema da Mochila bin\u00e1ria .","title":"04 - Heur\u00edsticas"},{"location":"aulas/04-projeto-heuristicas/#resumo-do-problema","text":"Dados N objetos e uma mochila que comporta at\u00e9 W quilos, cada um com peso w_i w_i e valor v_i v_i , selecionar objetos com o maior valor poss\u00edvel que caibam dentro da mochila. Entrada : N W w1 v1 .... wN vN Sa\u00edda : W V opt o1 ... oT W - peso dos objetos selecionados V - valor dos objetos selecionados opt 0 se for usada uma heur\u00edstica ou busca local 1 se a solu\u00e7\u00e3o for \u00f3timo global oi s\u00e3o os \u00edndices ( em ordem crescente ) dos objetos selecionados Tip Arquivos para verificar a corretude das suas implementa\u00e7\u00f5es est\u00e3o dispon\u00edveis nesta pasta. Eles est\u00e3o nomeados como in-*.txt , mais-caro-out-*.txt e mais-leve-out-*.txt .","title":"Resumo do problema"},{"location":"aulas/04-projeto-heuristicas/#mais-caro-primeiro","text":"A ideia desta heur\u00edstica \u00e9 n\u00e3o deixar nenhum objeto valioso para tr\u00e1s! Por isso vamos ser ganaciosos e pegar primeiro os objetos mais caros ! Se um objeto valioso n\u00e3o couber passamos para os mais baratos e prosseguimos at\u00e9 examinar todos objetos. Question Escreva abaixo um algoritmo em pseudo-c\u00f3digo para implementar a heur\u00edstica descrita acima. Resposta ids = // vetor inicializado com ids[i] = i ordene os vetores ids, v e w de acordo com o vetor de valores v peso = 0 valor = 0 resposta = //vetor inicializado com 0 T = 0 // n\u00famero de objetos selecionados para i=1..N se peso + w[i] < W ent\u00e3o resposta[T] = ids[i] peso += w[i] valor += v[i] T += 1 print peso, valor, 0 print resposta[0 .. T] Question Qual \u00e9 a complexidade computacional deste algoritmo? Ele \u00e9 a melhor implementa\u00e7\u00e3o poss\u00edvel? Resposta Se o algoritmo descrito em sua resposta anterior envolver ordena\u00e7\u00e3o, ent\u00e3o ele tem complexidade \\mathcal{O}(n\\log n) \\mathcal{O}(n\\log n) e \u00e9 o melhor poss\u00edvel sim (voc\u00ea consegue explicar por que?). Se voc\u00ea fez um loop duplo que procura pelo maior a cada itera\u00e7\u00e3o ent\u00e3o seu algoritmo \u00e9 \\mathcal{O}(n^2) \\mathcal{O}(n^2) . Example Agora que temos um algoritmo, crie uma implementa\u00e7\u00e3o do programa acima. Dica : C++ j\u00e1 possui um algoritmo de ordena\u00e7\u00e3o implementado no cabe\u00e7alho <algorithm> . Use-o. Busque por ordena\u00e7\u00e3o indireta para entender como ordenar os tr\u00eas vetores ao mesmo tempo. Pode ser conveniente organizar os dados usando struct .","title":"Mais caro primeiro"},{"location":"aulas/04-projeto-heuristicas/#mais-leve-primeiro","text":"Vamos testar uma abordagem oposta: quantidade agora \u00e9 o foco . Por isso vamos ser pr\u00e1ticos e pegar o maior n\u00famero de objetos poss\u00edvel ! Come\u00e7aremos agora pelos objetos mais leves e vamos torcer para que a quantidade grande de objetos selecionados resulte em uma mochila com alto valor. Question Compare esta heur\u00edstica com a da se\u00e7\u00e3o anterior levando em conta o algoritmo em pseudo-c\u00f3digo e sua complexidade computacional. Question Quais partes do programa da heur\u00edstica anterior podem ser aproveitadas para implementar a descrita acima? Example Implemente agora a heur\u00edstica do mais leve. Chame seu programa de mais_leve , mantendo tamb\u00e9m o c\u00f3digo do anterior.","title":"Mais leve primeiro"},{"location":"aulas/04-projeto-heuristicas/#analisando-nossas-heuristicas","text":"Question Crie uma entrada em que a heur\u00edstica do mais valioso seja muito melhor que a do mais leve. Escreva abaixo as sa\u00eddas de cada programa. Question Crie uma entrada em que a heur\u00edstica do mais leve seja muito melhor que a do mais valioso. Escreva abaixo as sa\u00eddas de cada programa. Question Com base nas suas respostas acima, em quais situa\u00e7\u00f5es a heur\u00edstica do mais valioso \u00e9 melhor? Question Com base nas suas respostas acima, em quais situa\u00e7\u00f5es a heur\u00edstica do mais leve \u00e9 melhor?","title":"Analisando nossas heur\u00edsticas"},{"location":"aulas/05-algoritmos-aleatorios/","text":"05 - Algoritmos Aleatorizados \u00b6 Um gerador de n\u00fameros pseudo-aleat\u00f3rios (RNG) \u00e9 um algoritmo determin\u00edstico que gera uma sequ\u00eancia de n\u00fameros que parece aleat\u00f3ria. Essa frase possui dois termos importantes que precisamos destrinchar: determin\u00edstico : Um RNG tipicamente recebe como entrada um inteiro seed (que representa uma sequ\u00eancia de bits \"aleat\u00f3ria\") e gera uma sequ\u00eancia de n\u00fameros baseada no seed . Ou seja, o algoritmo \u00e9 determin\u00edstico pois gera sempre a mesma sequ\u00eancia para uma determinada entrada ( seed ). parece aleat\u00f3ria : Se compararmos duas sequ\u00eancias de n\u00fameros, uma gerada por um RNG e outra por uma distribui\u00e7\u00e3o uniforme de verdade, n\u00e3o conseguimos dizer qual distribui\u00e7\u00e3o foi gerada pelo RNG . Ou seja, ao escolhermos um seed a sequ\u00eancia gerada ser\u00e1 sempre a mesma, mesmo se executarmos o programa em outras m\u00e1quinas. Isso torna a utiliza\u00e7\u00e3o de RNGs para experimentos bastante interessante: \u00e9 poss\u00edvel reproduzir os resultados feitos por outros desenvolvedores/cientistas. Para isto \u00e9 necess\u00e1rio que o programa permita escolher o seed da simula\u00e7\u00e3o; que o seed usado seja publicado junto com os resultados. Question E se quisermos gerar uma sequ\u00eancia diferente a cada execu\u00e7\u00e3o do programa? Como poder\u00edamos configurar o seed para que isto aconte\u00e7a? Iniciando com RNGs \u00b6 Muitas implementa\u00e7\u00f5es de RNGs s\u00e3o divididas em duas partes: engine / random state : algoritmo que gera um inteiro cujos bits formam uma sequ\u00eancia pseudo-aleat\u00f3ria. distribution : utiliza os bits acima para retornar n\u00fameros que sigam alguma distribui\u00e7\u00e3o estat\u00edstica (como normal ou uniforme). Question A biblioteca padr\u00e3o de C++ disponibiliza diversas fun\u00e7\u00f5es para utiliza\u00e7\u00e3o de *RNG*s (cabe\u00e7alho <random> - documenta\u00e7\u00e3o neste link ). Se voc\u00ea quisesse sortear n\u00fameros aleat\u00f3rios inteiros entre -2 e 5 quais fun\u00e7\u00f5es usaria? Resposta #include <random> ... std::default_random_engine generator; std::uniform_int_distribution<int> distribution(-2,5); distribution(generator); // gera n\u00famero Question E se voc\u00ea quisesse sortear um n\u00famero real entre 0 e 1 ? Resposta #include <random> ... std::default_random_engine generator; std::uniform_real_distribution<double> distribution(0.0, 1.0); distribution(generator); // gera n\u00famero Agora que voc\u00ea j\u00e1 consegue gerar n\u00fameros aleat\u00f3rios, vamos implementar nossa primeira vers\u00e3o de uma heur\u00edstica aleatorizada. Example Adicionaremos a seguinte varia\u00e7\u00e3o na nossa heur\u00edstica: a cada passo de sele\u00e7\u00e3o temos 25% de chance de selecionar um objeto aleat\u00f3rio que ainda n\u00e3o foi utilizado. Ou seja, cada passo do algoritmo segue a seguinte regra Fa\u00e7a um sorteio aleat\u00f3rio Com probabilidade 75% pegue o pr\u00f3ximo objeto n\u00e3o selecionado de acordo com a heur\u00edstica (mais leve ou mais caro) Com probabilidade 25% selecione um objeto qualquer dos que n\u00e3o foram analisados ainda. Note que n\u00e3o mudamos o pr\u00f3ximo elemento ao fazer a sele\u00e7\u00e3o aleat\u00f3ria. Adote seed=10 nesta tarefa. Dica : agora \u00e9 poss\u00edvel que eu olhe um produto mais de uma vez. Voc\u00ea precisar\u00e1 checar isso no seu programa! Resposta Os arquivos in-*.txt cont\u00e9m entradas para teste. Os arquivos out-caro-(rand-?)*.txt cont\u00e9m as sa\u00eddas esperadas para as heur\u00edsticas do mais caro. Question Rode a heur\u00edstica aleatorizada 10 vezes (como fazer isso?) e anote os valores das mochilas obtidas. Em m\u00e9dia, \u00e9 melhor ou pior que a heuristca sem aleatoriza\u00e7\u00e3o? Construindo uma solu\u00e7\u00e3o inteira aleat\u00f3ria \u00b6 Vamos agora fazer algo mais absurdo: e se criarmos uma solu\u00e7\u00e3o toda aleat\u00f3ria? Question Como voc\u00ea criaria uma solu\u00e7\u00e3o aleatoriamente? Resposta N\u00e3o existe uma resposta certa aqui. Duas solu\u00e7\u00f5es s\u00e3o mais comuns: passando por cada objeto, pegue-o com probabilidade 50% . percorra a lista em ordem aleat\u00f3ria, fazendo o mesmo algoritmo do mais caro/leve. Example Tente implementar a abordagem 1 da resposta acima. Example Tente implementar a abordagem 2 da resposta acima. Question Rode ambos programas acima com v\u00e1rios seeds diferentes e anote abaixo os resultados. Warning Iremos discutir esses resultados na pr\u00f3xima aula.","title":"05 - Algoritmos Aleatorizados"},{"location":"aulas/05-algoritmos-aleatorios/#05-algoritmos-aleatorizados","text":"Um gerador de n\u00fameros pseudo-aleat\u00f3rios (RNG) \u00e9 um algoritmo determin\u00edstico que gera uma sequ\u00eancia de n\u00fameros que parece aleat\u00f3ria. Essa frase possui dois termos importantes que precisamos destrinchar: determin\u00edstico : Um RNG tipicamente recebe como entrada um inteiro seed (que representa uma sequ\u00eancia de bits \"aleat\u00f3ria\") e gera uma sequ\u00eancia de n\u00fameros baseada no seed . Ou seja, o algoritmo \u00e9 determin\u00edstico pois gera sempre a mesma sequ\u00eancia para uma determinada entrada ( seed ). parece aleat\u00f3ria : Se compararmos duas sequ\u00eancias de n\u00fameros, uma gerada por um RNG e outra por uma distribui\u00e7\u00e3o uniforme de verdade, n\u00e3o conseguimos dizer qual distribui\u00e7\u00e3o foi gerada pelo RNG . Ou seja, ao escolhermos um seed a sequ\u00eancia gerada ser\u00e1 sempre a mesma, mesmo se executarmos o programa em outras m\u00e1quinas. Isso torna a utiliza\u00e7\u00e3o de RNGs para experimentos bastante interessante: \u00e9 poss\u00edvel reproduzir os resultados feitos por outros desenvolvedores/cientistas. Para isto \u00e9 necess\u00e1rio que o programa permita escolher o seed da simula\u00e7\u00e3o; que o seed usado seja publicado junto com os resultados. Question E se quisermos gerar uma sequ\u00eancia diferente a cada execu\u00e7\u00e3o do programa? Como poder\u00edamos configurar o seed para que isto aconte\u00e7a?","title":"05 - Algoritmos Aleatorizados"},{"location":"aulas/05-algoritmos-aleatorios/#iniciando-com-rngs","text":"Muitas implementa\u00e7\u00f5es de RNGs s\u00e3o divididas em duas partes: engine / random state : algoritmo que gera um inteiro cujos bits formam uma sequ\u00eancia pseudo-aleat\u00f3ria. distribution : utiliza os bits acima para retornar n\u00fameros que sigam alguma distribui\u00e7\u00e3o estat\u00edstica (como normal ou uniforme). Question A biblioteca padr\u00e3o de C++ disponibiliza diversas fun\u00e7\u00f5es para utiliza\u00e7\u00e3o de *RNG*s (cabe\u00e7alho <random> - documenta\u00e7\u00e3o neste link ). Se voc\u00ea quisesse sortear n\u00fameros aleat\u00f3rios inteiros entre -2 e 5 quais fun\u00e7\u00f5es usaria? Resposta #include <random> ... std::default_random_engine generator; std::uniform_int_distribution<int> distribution(-2,5); distribution(generator); // gera n\u00famero Question E se voc\u00ea quisesse sortear um n\u00famero real entre 0 e 1 ? Resposta #include <random> ... std::default_random_engine generator; std::uniform_real_distribution<double> distribution(0.0, 1.0); distribution(generator); // gera n\u00famero Agora que voc\u00ea j\u00e1 consegue gerar n\u00fameros aleat\u00f3rios, vamos implementar nossa primeira vers\u00e3o de uma heur\u00edstica aleatorizada. Example Adicionaremos a seguinte varia\u00e7\u00e3o na nossa heur\u00edstica: a cada passo de sele\u00e7\u00e3o temos 25% de chance de selecionar um objeto aleat\u00f3rio que ainda n\u00e3o foi utilizado. Ou seja, cada passo do algoritmo segue a seguinte regra Fa\u00e7a um sorteio aleat\u00f3rio Com probabilidade 75% pegue o pr\u00f3ximo objeto n\u00e3o selecionado de acordo com a heur\u00edstica (mais leve ou mais caro) Com probabilidade 25% selecione um objeto qualquer dos que n\u00e3o foram analisados ainda. Note que n\u00e3o mudamos o pr\u00f3ximo elemento ao fazer a sele\u00e7\u00e3o aleat\u00f3ria. Adote seed=10 nesta tarefa. Dica : agora \u00e9 poss\u00edvel que eu olhe um produto mais de uma vez. Voc\u00ea precisar\u00e1 checar isso no seu programa! Resposta Os arquivos in-*.txt cont\u00e9m entradas para teste. Os arquivos out-caro-(rand-?)*.txt cont\u00e9m as sa\u00eddas esperadas para as heur\u00edsticas do mais caro. Question Rode a heur\u00edstica aleatorizada 10 vezes (como fazer isso?) e anote os valores das mochilas obtidas. Em m\u00e9dia, \u00e9 melhor ou pior que a heuristca sem aleatoriza\u00e7\u00e3o?","title":"Iniciando com RNGs"},{"location":"aulas/05-algoritmos-aleatorios/#construindo-uma-solucao-inteira-aleatoria","text":"Vamos agora fazer algo mais absurdo: e se criarmos uma solu\u00e7\u00e3o toda aleat\u00f3ria? Question Como voc\u00ea criaria uma solu\u00e7\u00e3o aleatoriamente? Resposta N\u00e3o existe uma resposta certa aqui. Duas solu\u00e7\u00f5es s\u00e3o mais comuns: passando por cada objeto, pegue-o com probabilidade 50% . percorra a lista em ordem aleat\u00f3ria, fazendo o mesmo algoritmo do mais caro/leve. Example Tente implementar a abordagem 1 da resposta acima. Example Tente implementar a abordagem 2 da resposta acima. Question Rode ambos programas acima com v\u00e1rios seeds diferentes e anote abaixo os resultados. Warning Iremos discutir esses resultados na pr\u00f3xima aula.","title":"Construindo uma solu\u00e7\u00e3o inteira aleat\u00f3ria"},{"location":"aulas/06-busca-local/","text":"06 - Busca local \u00b6 Nesta aula trabalharemos com um algoritmo chamado \"Busca local\", que consiste basicamente em fazer pequenas atualiza\u00e7\u00f5es que melhoram sucessivamente uma solu\u00e7\u00e3o. Solu\u00e7\u00e3o aleatorizada \u00b6 Vamos iniciar criando solu\u00e7\u00f5es aleat\u00f3rias. Isto nos permitiria criar uma grande quantidade de solu\u00e7\u00f5es e, eventualmente, pegar a melhor delas. Apesar de ser muito mais simples que a busca heur\u00edstica, a quantidade massiva de solu\u00e7\u00f5es geradas tem potencial de encontrar boas solu\u00e7\u00f5es. Vamos trabalhar com um algoritmo bem simples para gerar solu\u00e7\u00f5es aleat\u00f3rias: Para cada objeto, selecione-o com probabilidade 0.5 . Se o objeto for selecionado, coloque-o na mochile se couber. Question Supondo que s\u00f3 existe uma solu\u00e7\u00e3o \u00f3tima global, qual \u00e9 a chance de a encontrarmos repetindo o algoritmo acima? Question Supondo que todos os objetos caibam na mochila, quantos s\u00e3o selecionados em m\u00e9dia? Example Implemente o algoritmo acima. Use seed=10 . Example Repita o algoritmo 10 vezes e pegue somente a melhor solu\u00e7\u00e3o. Tip Use os arquivos de entrada/sa\u00edda disponibilizados nas aulas passadas. Busca local \u00b6 Vamos agora implementar uma busca local para a Mochila Bin\u00e1ria seguindo os dois algoritmos vistos na expositiva. Mochila cheia \u00b6 Para implementar a Mochila cheia iremos adotar a seguinte estrat\u00e9gia: Gere uma solu\u00e7\u00e3o aleat\u00f3ria. Percorre novamente todos os objetos (na ordem da entrada) Se um objeto couber na mochila, inclua-o. Example Implemente o algoritmo acima. Example Rode a Mochila cheia 10 vezes e retorne a melhor solu\u00e7\u00e3o. Question Houve melhoria em rela\u00e7\u00e3o ao aleat\u00f3rio sozinho? Foi significativa? Fechamento \u00b6 Question Como voc\u00ea avalia os ganhos obtidos pela busca local em rela\u00e7\u00e3o ao aleat\u00f3rio?","title":"06 - Busca local"},{"location":"aulas/06-busca-local/#06-busca-local","text":"Nesta aula trabalharemos com um algoritmo chamado \"Busca local\", que consiste basicamente em fazer pequenas atualiza\u00e7\u00f5es que melhoram sucessivamente uma solu\u00e7\u00e3o.","title":"06 - Busca local"},{"location":"aulas/06-busca-local/#solucao-aleatorizada","text":"Vamos iniciar criando solu\u00e7\u00f5es aleat\u00f3rias. Isto nos permitiria criar uma grande quantidade de solu\u00e7\u00f5es e, eventualmente, pegar a melhor delas. Apesar de ser muito mais simples que a busca heur\u00edstica, a quantidade massiva de solu\u00e7\u00f5es geradas tem potencial de encontrar boas solu\u00e7\u00f5es. Vamos trabalhar com um algoritmo bem simples para gerar solu\u00e7\u00f5es aleat\u00f3rias: Para cada objeto, selecione-o com probabilidade 0.5 . Se o objeto for selecionado, coloque-o na mochile se couber. Question Supondo que s\u00f3 existe uma solu\u00e7\u00e3o \u00f3tima global, qual \u00e9 a chance de a encontrarmos repetindo o algoritmo acima? Question Supondo que todos os objetos caibam na mochila, quantos s\u00e3o selecionados em m\u00e9dia? Example Implemente o algoritmo acima. Use seed=10 . Example Repita o algoritmo 10 vezes e pegue somente a melhor solu\u00e7\u00e3o. Tip Use os arquivos de entrada/sa\u00edda disponibilizados nas aulas passadas.","title":"Solu\u00e7\u00e3o aleatorizada"},{"location":"aulas/06-busca-local/#busca-local","text":"Vamos agora implementar uma busca local para a Mochila Bin\u00e1ria seguindo os dois algoritmos vistos na expositiva.","title":"Busca local"},{"location":"aulas/06-busca-local/#mochila-cheia","text":"Para implementar a Mochila cheia iremos adotar a seguinte estrat\u00e9gia: Gere uma solu\u00e7\u00e3o aleat\u00f3ria. Percorre novamente todos os objetos (na ordem da entrada) Se um objeto couber na mochila, inclua-o. Example Implemente o algoritmo acima. Example Rode a Mochila cheia 10 vezes e retorne a melhor solu\u00e7\u00e3o. Question Houve melhoria em rela\u00e7\u00e3o ao aleat\u00f3rio sozinho? Foi significativa?","title":"Mochila cheia"},{"location":"aulas/06-busca-local/#fechamento","text":"Question Como voc\u00ea avalia os ganhos obtidos pela busca local em rela\u00e7\u00e3o ao aleat\u00f3rio?","title":"Fechamento"},{"location":"aulas/07-busca-exaustiva/","text":"07 - Busca exaustiva \u00b6 Pseudo-c\u00f3digo \u00b6 Vamos iniciar tentando escrever um algoritmo em pseudo-c\u00f3digo para a seguinte ideia: Iniciando com o objeto 0: N\u00e3o inclua ele na mochila: resolva o problema com o restante dos objetos e retorne esse resultado Inclua ele na mochila: resolva o problema com o restante dos objetos e uma mochila de capacidade C - p[0] . Retorne o resultado + v[0] . Escolhe a melhor das duas op\u00e7\u00f5es acima e retorne. Tip Note que pedimos para resolver o problema de novo, mas com menos objetos. Parece que esse \u00e9 um algoritmo recursivo! Question Escreva um algoritmo recursivo em pseudo-c\u00f3digo para resolver o problema da mochila. Seu algoritmo dever\u00e1 retornar o valor da mochila \u00f3tima, mas N\u00c3O precisa ainda retornar a mochila que tem esse valor. Question Adapte seu algoritmo acima para, al\u00e9m de retornar a melhor solu\u00e7\u00e3o, tamb\u00e9m retornar a mochila que tem esse valor. Dica : pode ser \u00fatil passar um vetor para guardar a melhor solu\u00e7\u00e3o encontrada. Implementa\u00e7\u00e3o \u00b6 Vamos agora tentar implementar o algoritmo de busca global que fizemos. Example Implemente em C++ seu algoritmo acima. Question Teste o seu programa com a entrada in-aula.txt (que \u00e9 a entrada dos slides). Voc\u00ea consegue agora responder \u00e0 pergunta Existe mochila com valor maior que 13 ? Fechamento \u00b6 Question Como voc\u00ea avalia os ganhos obtidos pela busca global em rela\u00e7\u00e3o \u00e0 busca local?","title":"07 - Busca exaustiva"},{"location":"aulas/07-busca-exaustiva/#07-busca-exaustiva","text":"","title":"07 - Busca exaustiva"},{"location":"aulas/07-busca-exaustiva/#pseudo-codigo","text":"Vamos iniciar tentando escrever um algoritmo em pseudo-c\u00f3digo para a seguinte ideia: Iniciando com o objeto 0: N\u00e3o inclua ele na mochila: resolva o problema com o restante dos objetos e retorne esse resultado Inclua ele na mochila: resolva o problema com o restante dos objetos e uma mochila de capacidade C - p[0] . Retorne o resultado + v[0] . Escolhe a melhor das duas op\u00e7\u00f5es acima e retorne. Tip Note que pedimos para resolver o problema de novo, mas com menos objetos. Parece que esse \u00e9 um algoritmo recursivo! Question Escreva um algoritmo recursivo em pseudo-c\u00f3digo para resolver o problema da mochila. Seu algoritmo dever\u00e1 retornar o valor da mochila \u00f3tima, mas N\u00c3O precisa ainda retornar a mochila que tem esse valor. Question Adapte seu algoritmo acima para, al\u00e9m de retornar a melhor solu\u00e7\u00e3o, tamb\u00e9m retornar a mochila que tem esse valor. Dica : pode ser \u00fatil passar um vetor para guardar a melhor solu\u00e7\u00e3o encontrada.","title":"Pseudo-c\u00f3digo"},{"location":"aulas/07-busca-exaustiva/#implementacao","text":"Vamos agora tentar implementar o algoritmo de busca global que fizemos. Example Implemente em C++ seu algoritmo acima. Question Teste o seu programa com a entrada in-aula.txt (que \u00e9 a entrada dos slides). Voc\u00ea consegue agora responder \u00e0 pergunta Existe mochila com valor maior que 13 ?","title":"Implementa\u00e7\u00e3o"},{"location":"aulas/07-busca-exaustiva/#fechamento","text":"Question Como voc\u00ea avalia os ganhos obtidos pela busca global em rela\u00e7\u00e3o \u00e0 busca local?","title":"Fechamento"},{"location":"aulas/08-busca-exaustiva-II/","text":"08 - Compara\u00e7\u00e3o de resultados \u00b6 J\u00e1 implementamos diversos algoritmos para o problema da mochila bin\u00e1ria e chegou a hora de compararmos os resultados por eles obtidos. Nossa ideia aqui \u00e9 exercitar nossa capacidade de responder perguntas abertas com base em dados. At\u00e9 qual tamanho de mochila a busca global resolve r\u00e1pido? \u00b6 O algoritmo de busca local \u00e9 melhor que as heur\u00edsticas? \u00b6 Vale a pena esperar pela busca global? At\u00e9 que ponto? \u00b6 Formulando a pergunta com precis\u00e3o \u00b6 Todas as perguntas acima s\u00e3o abertas. Elas admitem diferentes respostas dependendo de nossa interpreta\u00e7\u00e3o. Nesta se\u00e7\u00e3o iremos aprender a reformul\u00e1-las de maneira (mais) precisa e a planejar uma s\u00e9rie de experimentos que possam apoiar nossa resposta. Question Escolha uma das quest\u00f5es acima para trabalhar nesta quest\u00e3o. Question Alguns qualificadores comumente usados em discursos informais s\u00e3o considerados \"vazios\" quanto usados em um contexto mais cient\u00edfico, onde \u00e9 importante ser preciso nas mensagens. Express\u00f5es como \"A melhor que B\" \"r\u00e1pido, devagar, significativo\" \"vale a pena\" s\u00e3o ruins pois n\u00e3o deixam expl\u00edcito as expectativas de quem as escreveu. Por exemplo, poder\u00edamos ainda perguntar: \"A \u00e9 melhor que B\"** sob qual m\u00e9trica**? O que \u00e9 considerado \"r\u00e1pido, devagar ou significativo\"? 1 minuto \u00e9 r\u00e1pido ou devagar (depende da aplica\u00e7\u00e3o) Qual \u00e9 o crit\u00e9rio usado para \"valer a pena\"? Tempo? Valor da mochila? O qu\u00e3o pr\u00f3ximo do \u00f3timo vale a pena? Reescreva a pergunta escolhida agora especificando exatamente o que voc\u00ea gostaria de responder. Importante N\u00e3o existe resposta certa para a pergunta acima. Desde que voc\u00ea seja preciso em sua formula\u00e7\u00e3o a resposta est\u00e1 correta. Ou seja, neste momento n\u00e3o estamos questionando se a pergunta faz sentido , somente se ela est\u00e1 bem formulada . Agora que temos uma pergunta mais precisamente formulada, vamos planejar Question Temos dispon\u00edvel na aula 08 um gerador de entradas para a mochila. Como voc\u00ea o usaria para gerar dados que te ajudem a responder a pergunta escolhida? Especifique tamanhos de entrada e comente por que voc\u00ea faria estes testes. Question Com os dados da quest\u00e3o acima em m\u00e3os, que ferramentas visuais voc\u00ea usaria para facilitar a comunica\u00e7\u00e3o dos resultados? Se sua resposta incluir tabelas, diga o que ser\u00e1 mostrado em cada eixo e qual sua interpreta\u00e7\u00e3o dos dados. Se sua resposta incluir gr\u00e1ficos, explique qual tipo e qual informa\u00e7\u00e3o voc\u00ea estaria colocando em evid\u00eancia. Implementando de maneira reprodut\u00edvel \u00b6 Vamos agora tentar implementar seu plano acima de maneira reprodut\u00edvel. Ou seja, qualquer pessoa com a infra necess\u00e1ria poderia reexecutar seus experimentos e obter os mesmos dados que voc\u00ea. Example Re\u00fana todos os arquivos de entrada usados em uma pasta in . Example Crie um script python que executa seu programa para todas as entradas acima. Dicas : voc\u00ea pode usar os.system , mas subprocess.run permite colocar um tempo limite de execu\u00e7\u00e3o. Isto pode ser muito conveniente dependendo do tipo de pergunta que formulou time.time() pode ser interessante para medir o tempo de execu\u00e7\u00e3o do seu programa. Example Salve os resultados acima em um dataframe do Pandas . Se quiser, salve seus resultados correntes para um arquivo CSV . Example Crie tabelas ou gr\u00e1ficos a partir do dataframe criado.","title":"08 - Compara\u00e7\u00e3o de resultados"},{"location":"aulas/08-busca-exaustiva-II/#08-comparacao-de-resultados","text":"J\u00e1 implementamos diversos algoritmos para o problema da mochila bin\u00e1ria e chegou a hora de compararmos os resultados por eles obtidos. Nossa ideia aqui \u00e9 exercitar nossa capacidade de responder perguntas abertas com base em dados.","title":"08 - Compara\u00e7\u00e3o de resultados"},{"location":"aulas/08-busca-exaustiva-II/#ate-qual-tamanho-de-mochila-a-busca-global-resolve-rapido","text":"","title":"At\u00e9 qual tamanho de mochila a busca global resolve r\u00e1pido?"},{"location":"aulas/08-busca-exaustiva-II/#o-algoritmo-de-busca-local-e-melhor-que-as-heuristicas","text":"","title":"O algoritmo de busca local \u00e9 melhor que as heur\u00edsticas?"},{"location":"aulas/08-busca-exaustiva-II/#vale-a-pena-esperar-pela-busca-global-ate-que-ponto","text":"","title":"Vale a pena esperar pela busca global? At\u00e9 que ponto?"},{"location":"aulas/08-busca-exaustiva-II/#formulando-a-pergunta-com-precisao","text":"Todas as perguntas acima s\u00e3o abertas. Elas admitem diferentes respostas dependendo de nossa interpreta\u00e7\u00e3o. Nesta se\u00e7\u00e3o iremos aprender a reformul\u00e1-las de maneira (mais) precisa e a planejar uma s\u00e9rie de experimentos que possam apoiar nossa resposta. Question Escolha uma das quest\u00f5es acima para trabalhar nesta quest\u00e3o. Question Alguns qualificadores comumente usados em discursos informais s\u00e3o considerados \"vazios\" quanto usados em um contexto mais cient\u00edfico, onde \u00e9 importante ser preciso nas mensagens. Express\u00f5es como \"A melhor que B\" \"r\u00e1pido, devagar, significativo\" \"vale a pena\" s\u00e3o ruins pois n\u00e3o deixam expl\u00edcito as expectativas de quem as escreveu. Por exemplo, poder\u00edamos ainda perguntar: \"A \u00e9 melhor que B\"** sob qual m\u00e9trica**? O que \u00e9 considerado \"r\u00e1pido, devagar ou significativo\"? 1 minuto \u00e9 r\u00e1pido ou devagar (depende da aplica\u00e7\u00e3o) Qual \u00e9 o crit\u00e9rio usado para \"valer a pena\"? Tempo? Valor da mochila? O qu\u00e3o pr\u00f3ximo do \u00f3timo vale a pena? Reescreva a pergunta escolhida agora especificando exatamente o que voc\u00ea gostaria de responder. Importante N\u00e3o existe resposta certa para a pergunta acima. Desde que voc\u00ea seja preciso em sua formula\u00e7\u00e3o a resposta est\u00e1 correta. Ou seja, neste momento n\u00e3o estamos questionando se a pergunta faz sentido , somente se ela est\u00e1 bem formulada . Agora que temos uma pergunta mais precisamente formulada, vamos planejar Question Temos dispon\u00edvel na aula 08 um gerador de entradas para a mochila. Como voc\u00ea o usaria para gerar dados que te ajudem a responder a pergunta escolhida? Especifique tamanhos de entrada e comente por que voc\u00ea faria estes testes. Question Com os dados da quest\u00e3o acima em m\u00e3os, que ferramentas visuais voc\u00ea usaria para facilitar a comunica\u00e7\u00e3o dos resultados? Se sua resposta incluir tabelas, diga o que ser\u00e1 mostrado em cada eixo e qual sua interpreta\u00e7\u00e3o dos dados. Se sua resposta incluir gr\u00e1ficos, explique qual tipo e qual informa\u00e7\u00e3o voc\u00ea estaria colocando em evid\u00eancia.","title":"Formulando a pergunta com precis\u00e3o"},{"location":"aulas/08-busca-exaustiva-II/#implementando-de-maneira-reprodutivel","text":"Vamos agora tentar implementar seu plano acima de maneira reprodut\u00edvel. Ou seja, qualquer pessoa com a infra necess\u00e1ria poderia reexecutar seus experimentos e obter os mesmos dados que voc\u00ea. Example Re\u00fana todos os arquivos de entrada usados em uma pasta in . Example Crie um script python que executa seu programa para todas as entradas acima. Dicas : voc\u00ea pode usar os.system , mas subprocess.run permite colocar um tempo limite de execu\u00e7\u00e3o. Isto pode ser muito conveniente dependendo do tipo de pergunta que formulou time.time() pode ser interessante para medir o tempo de execu\u00e7\u00e3o do seu programa. Example Salve os resultados acima em um dataframe do Pandas . Se quiser, salve seus resultados correntes para um arquivo CSV . Example Crie tabelas ou gr\u00e1ficos a partir do dataframe criado.","title":"Implementando de maneira reprodut\u00edvel"},{"location":"aulas/09-branch-and-bound/","text":"09 - Branch and Bound \u00b6 Vamos come\u00e7ar nossa atividade instrumentando nossa busca exaustiva. Dado que a promessa do nosso algoritmo Branch and Bound \u00e9 evitar chegar at\u00e9 o fim de uma solu\u00e7\u00e3o parcial que n\u00e3o tem chance de ser \u00f3tima, faz todo sentido ent\u00e3o contarmos quantas vezes chegamos at\u00e9 o fim. Example Vamos adicionar dois contadores ao nosso programa num_leaf conta quantas vezes uma solu\u00e7\u00e3o completa foi comparada com a melhor poss\u00edvel num_copy conta quantas vezes foi encontrada uma solu\u00e7\u00e3o melhor que a atual. Question Rode para o exemplo in150.txt e anote os valores obtidos abaixo. Um bound simples: ignorar peso \u00b6 Nesta se\u00e7\u00e3o implementaremos um Branch and Bound simples com a seguinte ideia: BOUND Complete uma solu\u00e7\u00e3o parcial incluindo na mochila todos os objetos n\u00e3o selecionados. Isto \u00e9 equivalente a relaxar a restri\u00e7\u00e3o do peso . Question Os contadores num_leaf e num_copy se modificariam ao implementar o Branch and Bound ? Se sim, quais deles? Resposta Somente num_leaf , j\u00e1 que deixamos de chegar em folhas que n\u00e3o tem chance de serem \u00f3timos globais. num_copy continua igual, j\u00e1 que conta o n\u00famero de vezes que o melhor foi atualizado. Example Implemente no seu c\u00f3digo o Branch and Bound usando o Bound acima. Ou seja, voc\u00ea dever\u00e1, ao chegar em um objeto Checar se a soma da solu\u00e7\u00e3o atual mais o bound \u00e9 melhor que o melhor poss\u00edvel. Se n\u00e3o for retorna Se for prossegue fazendo a escolha para o objeto atual. Example Adicione ao seu programa um contador num_bounds que conta o n\u00famero de vezes em que evitamos de testar uma solu\u00e7\u00e3o parcial at\u00e9 o fim. Question Teste seu programa novamente com a entrada in150.txt . Houve ganho de desempenho? Anote abaixo os contadores e interprete seu resultado. Avan\u00e7ado \u00b6 Question O bound Ignorar peso depende das escolhas feitas at\u00e9 o momento? Ou seja, se tenho 4 objetos, o bound da solu\u00e7\u00e3o parcial (1, 0, -, -) \u00e9 igual ou diferente do bound da solu\u00e7\u00e3o parcial (1, 1, -, -) ? Question Como voc\u00ea poderia economizar trabalho ao calcular o bound? \u00c9 poss\u00edvel pr\u00e9-calcular algo? Example Reimplemente seu bound, desta vez pr\u00e9-calculando tudo antes de iniciar a busca_exaustiva. Question Rode novamente com a entrada in150.txt e verifique se houve ganho de tempo de execu\u00e7\u00e3o. Analisando nosso bound \u00b6 Conseguimos algum ganho de desempenho ao criar o \u00faltimo bound. Vamos agora descobrir se ele \u00e9 bom mesmo. Question Como voc\u00ea mediria a altura em que o bound agiu? Seria melhor cortar mais para cima ou mais para baixo? O valor num_bound n\u00e3o ajuda muito a entender se o bound \u00e9 bom, j\u00e1 que cortar muito pode significar faz\u00ea-lo pr\u00f3ximo das folhas (e isto gera ganho pequeno de desempenho). Example Fa\u00e7a seu programa contar o n\u00famero de vezes em que o bound \u00e9 ativado em cada n\u00edvel da recurs\u00e3o. Mostre esses valores no terminal. Question Interprete os resultados acima. Example Fa\u00e7a seu programa guardar a diferen\u00e7a m\u00e9dia entre o valor do bound (que \u00e9 uma estimativa da qualidade final de uma solu\u00e7\u00e3o) e o melhor valor encontrado para aquele ramo da recurs\u00e3o. Dica : voc\u00ea vai precisar retornar o valor da melhor mochila encontrada em cada parte. Question Interprete os resultados acima. Example Plote os valores obtidos acima e interprete seus resultados.","title":"09 - Branch and Bound"},{"location":"aulas/09-branch-and-bound/#09-branch-and-bound","text":"Vamos come\u00e7ar nossa atividade instrumentando nossa busca exaustiva. Dado que a promessa do nosso algoritmo Branch and Bound \u00e9 evitar chegar at\u00e9 o fim de uma solu\u00e7\u00e3o parcial que n\u00e3o tem chance de ser \u00f3tima, faz todo sentido ent\u00e3o contarmos quantas vezes chegamos at\u00e9 o fim. Example Vamos adicionar dois contadores ao nosso programa num_leaf conta quantas vezes uma solu\u00e7\u00e3o completa foi comparada com a melhor poss\u00edvel num_copy conta quantas vezes foi encontrada uma solu\u00e7\u00e3o melhor que a atual. Question Rode para o exemplo in150.txt e anote os valores obtidos abaixo.","title":"09 - Branch and Bound"},{"location":"aulas/09-branch-and-bound/#um-bound-simples-ignorar-peso","text":"Nesta se\u00e7\u00e3o implementaremos um Branch and Bound simples com a seguinte ideia: BOUND Complete uma solu\u00e7\u00e3o parcial incluindo na mochila todos os objetos n\u00e3o selecionados. Isto \u00e9 equivalente a relaxar a restri\u00e7\u00e3o do peso . Question Os contadores num_leaf e num_copy se modificariam ao implementar o Branch and Bound ? Se sim, quais deles? Resposta Somente num_leaf , j\u00e1 que deixamos de chegar em folhas que n\u00e3o tem chance de serem \u00f3timos globais. num_copy continua igual, j\u00e1 que conta o n\u00famero de vezes que o melhor foi atualizado. Example Implemente no seu c\u00f3digo o Branch and Bound usando o Bound acima. Ou seja, voc\u00ea dever\u00e1, ao chegar em um objeto Checar se a soma da solu\u00e7\u00e3o atual mais o bound \u00e9 melhor que o melhor poss\u00edvel. Se n\u00e3o for retorna Se for prossegue fazendo a escolha para o objeto atual. Example Adicione ao seu programa um contador num_bounds que conta o n\u00famero de vezes em que evitamos de testar uma solu\u00e7\u00e3o parcial at\u00e9 o fim. Question Teste seu programa novamente com a entrada in150.txt . Houve ganho de desempenho? Anote abaixo os contadores e interprete seu resultado.","title":"Um bound simples: ignorar peso"},{"location":"aulas/09-branch-and-bound/#avancado","text":"Question O bound Ignorar peso depende das escolhas feitas at\u00e9 o momento? Ou seja, se tenho 4 objetos, o bound da solu\u00e7\u00e3o parcial (1, 0, -, -) \u00e9 igual ou diferente do bound da solu\u00e7\u00e3o parcial (1, 1, -, -) ? Question Como voc\u00ea poderia economizar trabalho ao calcular o bound? \u00c9 poss\u00edvel pr\u00e9-calcular algo? Example Reimplemente seu bound, desta vez pr\u00e9-calculando tudo antes de iniciar a busca_exaustiva. Question Rode novamente com a entrada in150.txt e verifique se houve ganho de tempo de execu\u00e7\u00e3o.","title":"Avan\u00e7ado"},{"location":"aulas/09-branch-and-bound/#analisando-nosso-bound","text":"Conseguimos algum ganho de desempenho ao criar o \u00faltimo bound. Vamos agora descobrir se ele \u00e9 bom mesmo. Question Como voc\u00ea mediria a altura em que o bound agiu? Seria melhor cortar mais para cima ou mais para baixo? O valor num_bound n\u00e3o ajuda muito a entender se o bound \u00e9 bom, j\u00e1 que cortar muito pode significar faz\u00ea-lo pr\u00f3ximo das folhas (e isto gera ganho pequeno de desempenho). Example Fa\u00e7a seu programa contar o n\u00famero de vezes em que o bound \u00e9 ativado em cada n\u00edvel da recurs\u00e3o. Mostre esses valores no terminal. Question Interprete os resultados acima. Example Fa\u00e7a seu programa guardar a diferen\u00e7a m\u00e9dia entre o valor do bound (que \u00e9 uma estimativa da qualidade final de uma solu\u00e7\u00e3o) e o melhor valor encontrado para aquele ramo da recurs\u00e3o. Dica : voc\u00ea vai precisar retornar o valor da melhor mochila encontrada em cada parte. Question Interprete os resultados acima. Example Plote os valores obtidos acima e interprete seus resultados.","title":"Analisando nosso bound"},{"location":"aulas/10-branch-and-bound-II/","text":"10 - Branch and Bound II \u00b6 Vimos na expositiva que um bound justo \u00e9 importante para conseguir ganhos grandes de desempenho no Branch and Bound. A mochila fracion\u00e1ria \u00b6 Nosso relaxamento de restri\u00e7\u00e3o permite que um objeto seja incluido em fra\u00e7\u00f5es. Como vimos na aula, existe um algoritmo simples que d\u00e1 a solu\u00e7\u00e3o \u00f3tima: ordene os objetos por propor\u00e7\u00e3o valor/kg. pegue os objetos nesta ordem at\u00e9 n\u00e3o caber mais na mochila se um objeto n\u00e3o couber inteiro, pegue a maior fra\u00e7\u00e3o poss\u00edvel A resposta da Mochila fracion\u00e1ria provavelmente n\u00e3o ser\u00e1 uma Mochila bin\u00e1ria vi\u00e1vel. Mesmo assim, provamos na aula que ela \u00e9 um limitante superior para a Mochila bin\u00e1ria . Example Implemente a mochila fracion\u00e1ria e execute-a para nossa entrada in150.txt . Sua sa\u00edda deve estar no formato abaixo. valor objeto1(fracao1) .... objetoN(fracaoN) Veja o arquivo out150.txt para a resposta esperada neste exerc\u00edcio. A ordem importa? Estrat\u00e9gia Best-first \u00b6 Antes de incorporar o bound usando mochila fracion\u00e1ria vamos observar o efeito da ordem de an\u00e1lise das solu\u00e7\u00f5es. Na nossa primeira tentativa fizemos a busca exaustiva na ordem que os objetos foram apresentados na entrada. Isso resultava nos seguintes indicadores num_leaf 770786731 num_copy 44 Question Suponha que agora voc\u00ea ir\u00e1 analisar os objetos na ordem usada na Mochila fracion\u00e1ria . Voc\u00ea espera que num_leaf continue igual, aumente ou diminua? Question Suponha que agora voc\u00ea ir\u00e1 analisar os objetos na ordem usada na Mochila fracion\u00e1ria . Voc\u00ea espera que num_copy continue igual, aumente ou diminua? Example Implemente esta estrat\u00e9gia e verifique se os seus resultados se confirmaram. Resposta Assim como voc\u00ea deve ter respondido nas duas primeiras quest\u00f5es, num_leaf deve continuar igual, mas num_copy vai diminuir muito. O bound Mochila fracion\u00e1ria \u00b6 Vamos agora juntar tudo e implementar o bound Mochila fracion\u00e1ria examinando os objetos na ordem da parte anterior. Question Levando em conta que a ordem anterior fez apenas 3 c\u00f3pias, qual sua expectativa em rela\u00e7\u00e3o aos poss\u00edveis ganhos de desempenho que implementar o bound Mochila fracion\u00e1ria pode trazer? Example Implemente o bound. Question Quais os valores de num_leaf , num_copy e num_bound para in150.txt ? Analisando o bound \u00b6 Vamos agora analisar nossas medidas de efetividade do bound. Question Compare os valores de num_bound para Ignorar peso e Mochila fracion\u00e1ria . Voc\u00ea consegue tirar conclus\u00f5es a partir deste valor? Resposta A dica de que tem algo estranho \u00e9 que num_bound \u00e9 muito menor. Ou seja, a conclus\u00e3o de que quanto menor o num_bound melhor \u00e9 claramente problem\u00e1tica, j\u00e1 que contraria a intui\u00e7\u00e3o de que um bound teria que estar ocorrendo v\u00e1rias vezes. Por outro lado, o programa \u00e9 realmente muito mais r\u00e1pido, ent\u00e3o deve haver algo que n\u00e3o est\u00e1 sendo medido corretamente. Example Implemente no seu c\u00f3digo a contagem de quantas vezes o bound foi feito por n\u00edvel da recurs\u00e3o. Question Compare o resultado acima com o obtido no mesmo teste na aula anterior. Agora voc\u00ea consegue explicar a raz\u00e3o do desempenho da nova implementa\u00e7\u00e3o ter sido t\u00e3o melhor? Resposta para a aula anterior 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 43 32830 536970 250518 792810 1550819 2119857 2475746 2710403 56370234 16347241 14514859 63885823 22061564 111961043 25164499 79575293 47368277 2373877 0 17059720 2265050 423517","title":"10 - Branch and Bound II"},{"location":"aulas/10-branch-and-bound-II/#10-branch-and-bound-ii","text":"Vimos na expositiva que um bound justo \u00e9 importante para conseguir ganhos grandes de desempenho no Branch and Bound.","title":"10 - Branch and Bound II"},{"location":"aulas/10-branch-and-bound-II/#a-mochila-fracionaria","text":"Nosso relaxamento de restri\u00e7\u00e3o permite que um objeto seja incluido em fra\u00e7\u00f5es. Como vimos na aula, existe um algoritmo simples que d\u00e1 a solu\u00e7\u00e3o \u00f3tima: ordene os objetos por propor\u00e7\u00e3o valor/kg. pegue os objetos nesta ordem at\u00e9 n\u00e3o caber mais na mochila se um objeto n\u00e3o couber inteiro, pegue a maior fra\u00e7\u00e3o poss\u00edvel A resposta da Mochila fracion\u00e1ria provavelmente n\u00e3o ser\u00e1 uma Mochila bin\u00e1ria vi\u00e1vel. Mesmo assim, provamos na aula que ela \u00e9 um limitante superior para a Mochila bin\u00e1ria . Example Implemente a mochila fracion\u00e1ria e execute-a para nossa entrada in150.txt . Sua sa\u00edda deve estar no formato abaixo. valor objeto1(fracao1) .... objetoN(fracaoN) Veja o arquivo out150.txt para a resposta esperada neste exerc\u00edcio.","title":"A mochila fracion\u00e1ria"},{"location":"aulas/10-branch-and-bound-II/#a-ordem-importa-estrategia-best-first","text":"Antes de incorporar o bound usando mochila fracion\u00e1ria vamos observar o efeito da ordem de an\u00e1lise das solu\u00e7\u00f5es. Na nossa primeira tentativa fizemos a busca exaustiva na ordem que os objetos foram apresentados na entrada. Isso resultava nos seguintes indicadores num_leaf 770786731 num_copy 44 Question Suponha que agora voc\u00ea ir\u00e1 analisar os objetos na ordem usada na Mochila fracion\u00e1ria . Voc\u00ea espera que num_leaf continue igual, aumente ou diminua? Question Suponha que agora voc\u00ea ir\u00e1 analisar os objetos na ordem usada na Mochila fracion\u00e1ria . Voc\u00ea espera que num_copy continue igual, aumente ou diminua? Example Implemente esta estrat\u00e9gia e verifique se os seus resultados se confirmaram. Resposta Assim como voc\u00ea deve ter respondido nas duas primeiras quest\u00f5es, num_leaf deve continuar igual, mas num_copy vai diminuir muito.","title":"A ordem importa? Estrat\u00e9gia Best-first"},{"location":"aulas/10-branch-and-bound-II/#o-bound-mochila-fracionaria","text":"Vamos agora juntar tudo e implementar o bound Mochila fracion\u00e1ria examinando os objetos na ordem da parte anterior. Question Levando em conta que a ordem anterior fez apenas 3 c\u00f3pias, qual sua expectativa em rela\u00e7\u00e3o aos poss\u00edveis ganhos de desempenho que implementar o bound Mochila fracion\u00e1ria pode trazer? Example Implemente o bound. Question Quais os valores de num_leaf , num_copy e num_bound para in150.txt ?","title":"O bound Mochila fracion\u00e1ria"},{"location":"aulas/10-branch-and-bound-II/#analisando-o-bound","text":"Vamos agora analisar nossas medidas de efetividade do bound. Question Compare os valores de num_bound para Ignorar peso e Mochila fracion\u00e1ria . Voc\u00ea consegue tirar conclus\u00f5es a partir deste valor? Resposta A dica de que tem algo estranho \u00e9 que num_bound \u00e9 muito menor. Ou seja, a conclus\u00e3o de que quanto menor o num_bound melhor \u00e9 claramente problem\u00e1tica, j\u00e1 que contraria a intui\u00e7\u00e3o de que um bound teria que estar ocorrendo v\u00e1rias vezes. Por outro lado, o programa \u00e9 realmente muito mais r\u00e1pido, ent\u00e3o deve haver algo que n\u00e3o est\u00e1 sendo medido corretamente. Example Implemente no seu c\u00f3digo a contagem de quantas vezes o bound foi feito por n\u00edvel da recurs\u00e3o. Question Compare o resultado acima com o obtido no mesmo teste na aula anterior. Agora voc\u00ea consegue explicar a raz\u00e3o do desempenho da nova implementa\u00e7\u00e3o ter sido t\u00e3o melhor? Resposta para a aula anterior 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 43 32830 536970 250518 792810 1550819 2119857 2475746 2710403 56370234 16347241 14514859 63885823 22061564 111961043 25164499 79575293 47368277 2373877 0 17059720 2265050 423517","title":"Analisando o bound"},{"location":"projetos/","text":"Travelling Sales Person (TSP) \u00b6 Nosso projeto do semestre ser\u00e1 o Caixeiro Viajante . Neste problema recebemos uma lista de cidades representadas por suas coordenadas (x_i, y_i)_{i=0}^N (x_i, y_i)_{i=0}^N e temos como objetivo encontrar o o caminho fechado que visite todas as cidades tenha o menor comprimento poss\u00edvel Note que podemos come\u00e7ar de qualquer cidade, j\u00e1 que nosso caminho \u00e9 fechado. Ou seja, ele come\u00e7a e termina no mesmo lugar. Este \u00e9 um problema muito estudado em otimiza\u00e7\u00e3o e existem v\u00e1rios m\u00e9todos que proporcionam solu\u00e7\u00f5es muito boas em pouqu\u00edssimo tempo. Por exemplo, o Gif abaixo usa uma t\u00e9cnica de otimiza\u00e7\u00e3o chamada Simulated annealing . \u00c9 f\u00e1cil de perceber que este problema ocorre frequentemente em log\u00edsitca, seja na forma que apresentamos ou em sua generaliza\u00e7\u00e3o, o Roteamento de Ve\u00edculos . Por que escolhemos esse problema? \u00b6 O TSP \u00e9 um problema de otimiza\u00e7\u00e3o dos mais dif\u00edceis ( NP-hard ). N\u00e3o existe algoritmo polinomial que encontre a melhor solu\u00e7\u00e3o nem algoritmo polinomial que cheque se uma solu\u00e7\u00e3o \u00e9 a melhor. Entramos ent\u00e3o em duas \u00e1reas: encontrar a melhor solu\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel usar heur\u00edsticas para encontrar uma solu\u00e7\u00e3o boa o mais r\u00e1pido poss\u00edvel Trabalharemos com ambas as ideias durante a disciplina, focando tanto em implementa\u00e7\u00f5es sequenciais como paralelas. Avalia\u00e7\u00e3o e formatos de entrada e sa\u00edda \u00b6 O projeto \u00e9 individual e ser\u00e1 corrigido usando uma s\u00e9rie de scripts de corre\u00e7\u00e3o automatizada. Entrada N x1 y1 .... xN yN N \u00e9 o n\u00famero de cidades xi yi s\u00e3o as coordenadas de cada cidade Sa\u00edda L O c1 .... cN L \u00e9 o comprimento do tour O indica se o tour \u00e9 \u00f3timo (1) ou n\u00e3o (0) c1 ... cN \u00e9 a sequ\u00eancia de cidades visitadas para chegar no tour de comprimento L Importante Os formatos de entrada e sa\u00edda dever\u00e3o ser respeitados de maneira estrita Algumas entregas pedir\u00e3o tamb\u00e9m informa\u00e7\u00f5es mostradas na sa\u00edda de erros std:cerr Os scripts de corre\u00e7\u00e3o ser\u00e3o atualizados durante o semestre. 4. Entregas e Datas importantes \u00b6 O projeto de voc\u00eas dever\u00e1 ser entregue via um reposit\u00f3rio Git privado criado especialmente para este fim. Ele ser\u00e1 criado a partir das respostas do formul\u00e1rio a seguir. Cada aluno ir\u00e1 adicionar sua solu\u00e7\u00e3o ao seu reposit\u00f3rio, que j\u00e1 ir\u00e1 conter os arquivos de corre\u00e7\u00e3o autom\u00e1tica. A entrega dever\u00e1 cumprir todos os itens do Checklist de projeto . As etapas do projeto ser\u00e3o disponibilizadas depois de discuss\u00f5es em sala de aula e estar\u00e3o conectadas com uma aula espec\u00edfica. Atividade 1 - heur\u00edstica da cidade mais pr\u00f3xima : Entrega 18/09 Atividade 2 - busca local - troca de ordem : Entrega 30/09 Atividade 3 - busca exaustiva : Entrega 13/09 Verifica\u00e7\u00e3o de resultados \u00b6 Voc\u00ea receber\u00e1 um convite para reposit\u00f3rio. Todas as atividades ser\u00e3o disponibilizadas neste reposit\u00f3rio e suas solu\u00e7\u00f5es devem ser adicionadas nos arquivos correspondentes. O corretor autom\u00e1tico depende do pacote grading-tools , que dever\u00e1 ser instalado como abaixo. $> python3.8 -m pip install --user git+https://github.com/igordsm/grading-tools Python 3.8 no Ubuntu Se seu python3 \u00e9 uma vers\u00e3o inferior ao 3.8, voc\u00ea pode instal\u00e1-lo com os pacotes abaixo: python3.8 python3.8-dev A partir da\u00ed poder\u00e1 seguir normalmente as instru\u00e7\u00f5es desta p\u00e1gina. Com isso configurado, \u00e9 s\u00f3 compilar seu programa e rodar python3.8 corretor.py executavel . Para baixar os novos exerc\u00edcios \u00e9 s\u00f3 rodar git pull . Os exerc\u00edcios ser\u00e3o entregues criando um commit com sua resposta e dando git push . Warning Fique atento a atualiza\u00e7\u00f5es no seu reposit\u00f3rio de projeto. Atualiza\u00e7\u00f5es no corretor ser\u00e3o feitas ao longo do semestre, assim como ser\u00e3o disponibilizados novos arquivos de entrada/sa\u00edda para cada parte a ser implementada.","title":"Travelling Sales Person (TSP)"},{"location":"projetos/#travelling-sales-person-tsp","text":"Nosso projeto do semestre ser\u00e1 o Caixeiro Viajante . Neste problema recebemos uma lista de cidades representadas por suas coordenadas (x_i, y_i)_{i=0}^N (x_i, y_i)_{i=0}^N e temos como objetivo encontrar o o caminho fechado que visite todas as cidades tenha o menor comprimento poss\u00edvel Note que podemos come\u00e7ar de qualquer cidade, j\u00e1 que nosso caminho \u00e9 fechado. Ou seja, ele come\u00e7a e termina no mesmo lugar. Este \u00e9 um problema muito estudado em otimiza\u00e7\u00e3o e existem v\u00e1rios m\u00e9todos que proporcionam solu\u00e7\u00f5es muito boas em pouqu\u00edssimo tempo. Por exemplo, o Gif abaixo usa uma t\u00e9cnica de otimiza\u00e7\u00e3o chamada Simulated annealing . \u00c9 f\u00e1cil de perceber que este problema ocorre frequentemente em log\u00edsitca, seja na forma que apresentamos ou em sua generaliza\u00e7\u00e3o, o Roteamento de Ve\u00edculos .","title":"Travelling Sales Person (TSP)"},{"location":"projetos/#por-que-escolhemos-esse-problema","text":"O TSP \u00e9 um problema de otimiza\u00e7\u00e3o dos mais dif\u00edceis ( NP-hard ). N\u00e3o existe algoritmo polinomial que encontre a melhor solu\u00e7\u00e3o nem algoritmo polinomial que cheque se uma solu\u00e7\u00e3o \u00e9 a melhor. Entramos ent\u00e3o em duas \u00e1reas: encontrar a melhor solu\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel usar heur\u00edsticas para encontrar uma solu\u00e7\u00e3o boa o mais r\u00e1pido poss\u00edvel Trabalharemos com ambas as ideias durante a disciplina, focando tanto em implementa\u00e7\u00f5es sequenciais como paralelas.","title":"Por que escolhemos esse problema?"},{"location":"projetos/#avaliacao-e-formatos-de-entrada-e-saida","text":"O projeto \u00e9 individual e ser\u00e1 corrigido usando uma s\u00e9rie de scripts de corre\u00e7\u00e3o automatizada. Entrada N x1 y1 .... xN yN N \u00e9 o n\u00famero de cidades xi yi s\u00e3o as coordenadas de cada cidade Sa\u00edda L O c1 .... cN L \u00e9 o comprimento do tour O indica se o tour \u00e9 \u00f3timo (1) ou n\u00e3o (0) c1 ... cN \u00e9 a sequ\u00eancia de cidades visitadas para chegar no tour de comprimento L Importante Os formatos de entrada e sa\u00edda dever\u00e3o ser respeitados de maneira estrita Algumas entregas pedir\u00e3o tamb\u00e9m informa\u00e7\u00f5es mostradas na sa\u00edda de erros std:cerr Os scripts de corre\u00e7\u00e3o ser\u00e3o atualizados durante o semestre. 4.","title":"Avalia\u00e7\u00e3o e formatos de entrada e sa\u00edda"},{"location":"projetos/#entregas-e-datas-importantes","text":"O projeto de voc\u00eas dever\u00e1 ser entregue via um reposit\u00f3rio Git privado criado especialmente para este fim. Ele ser\u00e1 criado a partir das respostas do formul\u00e1rio a seguir. Cada aluno ir\u00e1 adicionar sua solu\u00e7\u00e3o ao seu reposit\u00f3rio, que j\u00e1 ir\u00e1 conter os arquivos de corre\u00e7\u00e3o autom\u00e1tica. A entrega dever\u00e1 cumprir todos os itens do Checklist de projeto . As etapas do projeto ser\u00e3o disponibilizadas depois de discuss\u00f5es em sala de aula e estar\u00e3o conectadas com uma aula espec\u00edfica. Atividade 1 - heur\u00edstica da cidade mais pr\u00f3xima : Entrega 18/09 Atividade 2 - busca local - troca de ordem : Entrega 30/09 Atividade 3 - busca exaustiva : Entrega 13/09","title":"Entregas e Datas importantes"},{"location":"projetos/#verificacao-de-resultados","text":"Voc\u00ea receber\u00e1 um convite para reposit\u00f3rio. Todas as atividades ser\u00e3o disponibilizadas neste reposit\u00f3rio e suas solu\u00e7\u00f5es devem ser adicionadas nos arquivos correspondentes. O corretor autom\u00e1tico depende do pacote grading-tools , que dever\u00e1 ser instalado como abaixo. $> python3.8 -m pip install --user git+https://github.com/igordsm/grading-tools Python 3.8 no Ubuntu Se seu python3 \u00e9 uma vers\u00e3o inferior ao 3.8, voc\u00ea pode instal\u00e1-lo com os pacotes abaixo: python3.8 python3.8-dev A partir da\u00ed poder\u00e1 seguir normalmente as instru\u00e7\u00f5es desta p\u00e1gina. Com isso configurado, \u00e9 s\u00f3 compilar seu programa e rodar python3.8 corretor.py executavel . Para baixar os novos exerc\u00edcios \u00e9 s\u00f3 rodar git pull . Os exerc\u00edcios ser\u00e3o entregues criando um commit com sua resposta e dando git push . Warning Fique atento a atualiza\u00e7\u00f5es no seu reposit\u00f3rio de projeto. Atualiza\u00e7\u00f5es no corretor ser\u00e3o feitas ao longo do semestre, assim como ser\u00e3o disponibilizados novos arquivos de entrada/sa\u00edda para cada parte a ser implementada.","title":"Verifica\u00e7\u00e3o de resultados"},{"location":"projetos/busca-exaustiva/","text":".admonition p:nth-child(2) { font-size: 18pt; } Busca exaustiva \u00b6 Vamos agora explorar a cria\u00e7\u00e3o de um algoritmo que encontra o tour com a menor dist\u00e2ncia poss\u00edvel . Isto significa que teremos que listar todas as possibilidades e retornar a melhor poss\u00edvel. Nesta primeira etapa n\u00e3o iremos implementar algoritmos de busca exaustiva eficientes, como Branch and Bound e Best-first search . O requisito \u00e9 conseguir implementar um algoritmo recursivo simples para resolver o problema. Corre\u00e7\u00e3o autom\u00e1tica \u00b6 Al\u00e9m da resposta correta, seu algortimo dever\u00e1 tamb\u00e9m mostrar informa\u00e7\u00f5es na sa\u00edda de erros ( std::cerr ). Estas informa\u00e7\u00f5es ser\u00e3o usadas para checar corretude de sua implementa\u00e7\u00e3o. Para auxiliar na corre\u00e7\u00e3o voc\u00ea dever\u00e1 mostrar na sa\u00edda de erros os n\u00famero de vezes que seu programa encontrou uma solu\u00e7\u00e3o v\u00e1lida (que \u00e9 igual tamb\u00e9m ao n\u00famero de vezes que \u00e9 feita a compara\u00e7\u00e3o com a melhor solu\u00e7\u00e3o at\u00e9 o momento). Formate sua sa\u00edda como mostrado abaixo num_leaf XXX","title":"Busca exaustiva"},{"location":"projetos/busca-exaustiva/#busca-exaustiva","text":"Vamos agora explorar a cria\u00e7\u00e3o de um algoritmo que encontra o tour com a menor dist\u00e2ncia poss\u00edvel . Isto significa que teremos que listar todas as possibilidades e retornar a melhor poss\u00edvel. Nesta primeira etapa n\u00e3o iremos implementar algoritmos de busca exaustiva eficientes, como Branch and Bound e Best-first search . O requisito \u00e9 conseguir implementar um algoritmo recursivo simples para resolver o problema.","title":"Busca exaustiva"},{"location":"projetos/busca-exaustiva/#correcao-automatica","text":"Al\u00e9m da resposta correta, seu algortimo dever\u00e1 tamb\u00e9m mostrar informa\u00e7\u00f5es na sa\u00edda de erros ( std::cerr ). Estas informa\u00e7\u00f5es ser\u00e3o usadas para checar corretude de sua implementa\u00e7\u00e3o. Para auxiliar na corre\u00e7\u00e3o voc\u00ea dever\u00e1 mostrar na sa\u00edda de erros os n\u00famero de vezes que seu programa encontrou uma solu\u00e7\u00e3o v\u00e1lida (que \u00e9 igual tamb\u00e9m ao n\u00famero de vezes que \u00e9 feita a compara\u00e7\u00e3o com a melhor solu\u00e7\u00e3o at\u00e9 o momento). Formate sua sa\u00edda como mostrado abaixo num_leaf XXX","title":"Corre\u00e7\u00e3o autom\u00e1tica"},{"location":"projetos/busca-local/","text":"Busca local \u00b6 .admonition p:nth-child(2) { font-size: 18pt; } Nossa busca local consistir\u00e1 na seguinte estrat\u00e9gia: Quote Trocar a ordem de visita de duas cidades Ou seja, se for poss\u00edvel inverter a ordem de visita\u00e7\u00e3o de duas cidades e isso melhorar a solu\u00e7\u00e3o ent\u00e3o fa\u00e7a a troca. S\u00f3 pare quando isso n\u00e3o for mais poss\u00edvel. Para uniformizar nossas solu\u00e7\u00f5es vamos adotar a seguinte estrat\u00e9gia de desempates: Quote Se houver mais de uma troca, escolha a com primeira cidade de menor \u00edndice. Se houve empate escolha a com a segunda cidade com menor \u00edndice. Gera\u00e7\u00e3o de n\u00fameros aleat\u00f3rios \u00b6 Seu programa dever\u00e1 retornar o mesmo resultado em todas execu\u00e7\u00f5es. Dever\u00e1 ser poss\u00edvel configurar a seed usada no programa usando a vari\u00e1vel de ambiente SEED . `$> SEED=20 ./busca-local < in.txt Se n\u00e3o for passada via vari\u00e1vel de ambiente, assuma SEED=10 . O algoritmo dever\u00e1 gerar 10N solu\u00e7\u00f5es e retornar a melhor delas. Corre\u00e7\u00e3o autom\u00e1tica \u00b6 Al\u00e9m da resposta correta, seu algortimo dever\u00e1 tamb\u00e9m mostrar informa\u00e7\u00f5es na sa\u00edda de erros ( std::cerr ). Estas informa\u00e7\u00f5es ser\u00e3o usadas para checar corretude de sua implementa\u00e7\u00e3o. Quote A cada solu\u00e7\u00e3o gerada pela busca local (ap\u00f3s o processo de trocas), seu programa dever\u00e1 mostra em uma linha da sa\u00edda de erros a seguinte linha: local: size c1 c2 ... cN size \u00e9 o tamanho do tour encontrado c1 .... cN \u00e9 o tour que tem tamanho size Ser\u00e1 verificado na corre\u00e7\u00e3o autom\u00e1tica se as solu\u00e7\u00f5es locais produzidas obedecem \u00e0 regra do in\u00edcio da se\u00e7\u00e3o.","title":"Busca local"},{"location":"projetos/busca-local/#busca-local","text":".admonition p:nth-child(2) { font-size: 18pt; } Nossa busca local consistir\u00e1 na seguinte estrat\u00e9gia: Quote Trocar a ordem de visita de duas cidades Ou seja, se for poss\u00edvel inverter a ordem de visita\u00e7\u00e3o de duas cidades e isso melhorar a solu\u00e7\u00e3o ent\u00e3o fa\u00e7a a troca. S\u00f3 pare quando isso n\u00e3o for mais poss\u00edvel. Para uniformizar nossas solu\u00e7\u00f5es vamos adotar a seguinte estrat\u00e9gia de desempates: Quote Se houver mais de uma troca, escolha a com primeira cidade de menor \u00edndice. Se houve empate escolha a com a segunda cidade com menor \u00edndice.","title":"Busca local"},{"location":"projetos/busca-local/#geracao-de-numeros-aleatorios","text":"Seu programa dever\u00e1 retornar o mesmo resultado em todas execu\u00e7\u00f5es. Dever\u00e1 ser poss\u00edvel configurar a seed usada no programa usando a vari\u00e1vel de ambiente SEED . `$> SEED=20 ./busca-local < in.txt Se n\u00e3o for passada via vari\u00e1vel de ambiente, assuma SEED=10 . O algoritmo dever\u00e1 gerar 10N solu\u00e7\u00f5es e retornar a melhor delas.","title":"Gera\u00e7\u00e3o de n\u00fameros aleat\u00f3rios"},{"location":"projetos/busca-local/#correcao-automatica","text":"Al\u00e9m da resposta correta, seu algortimo dever\u00e1 tamb\u00e9m mostrar informa\u00e7\u00f5es na sa\u00edda de erros ( std::cerr ). Estas informa\u00e7\u00f5es ser\u00e3o usadas para checar corretude de sua implementa\u00e7\u00e3o. Quote A cada solu\u00e7\u00e3o gerada pela busca local (ap\u00f3s o processo de trocas), seu programa dever\u00e1 mostra em uma linha da sa\u00edda de erros a seguinte linha: local: size c1 c2 ... cN size \u00e9 o tamanho do tour encontrado c1 .... cN \u00e9 o tour que tem tamanho size Ser\u00e1 verificado na corre\u00e7\u00e3o autom\u00e1tica se as solu\u00e7\u00f5es locais produzidas obedecem \u00e0 regra do in\u00edcio da se\u00e7\u00e3o.","title":"Corre\u00e7\u00e3o autom\u00e1tica"},{"location":"projetos/checklist/","text":"Checklist de projeto \u00b6 Alguns requisitos de projeto b\u00e1sicos ser\u00e3o verificados em todas as entregas. O objetivo aqui \u00e9 evitar que uma evid\u00eancia importante de aprendizado deixe de ser enviada e prejudique a avalia\u00e7\u00e3o. N\u00e3o cumprir algum desses requisitos implica em reentrega valendo D . Script de compila\u00e7\u00e3o (CMake, Makefile, bash script). Relat\u00f3rio feito em Jupyter Notebook ou PWeave. Vers\u00e3o em PDF (ou HTML) do relat\u00f3rio Instru\u00e7\u00f5es para replicar os testes realizados. Se isto estiver incluso no relat\u00f3rio execut\u00e1vel basta indicar no texto. Se\u00e7\u00e3o explicando onde est\u00e1 e como usar o script de compila\u00e7\u00e3o. Requisitos de qualidade \u00b6 Al\u00e9m dos requisitos acima, que s\u00e3o obrigat\u00f3rios, os seguintes itens procuram medir a qualidade da implementa\u00e7\u00e3o que voc\u00eas desenvolveram. Assim como explicado na aula 01, eles n\u00e3o reprovam, mas diminuem a nota de projeto. Cada item que n\u00e3o for cumprido implica em desconto de 1,0 na nota de projeto. Programa compila sem warnings quando compilado com g++ -O3 -Wall -pedantic -std=c++11 ; Programa n\u00e3o tem warnings detectados pelo clang-tidy . Veja este v\u00eddeo para um breve tutorial de uso; usar os checks read*,performance*,hicpp*,modern*,-modernize-use-trailing-return-type . N\u00e3o h\u00e1 repeti\u00e7\u00e3o desnecess\u00e1ria de c\u00f3digo; Implementaremos v\u00e1rias solu\u00e7\u00f5es para o mesmo problema. \u00c9 importante compartilhar o m\u00e1ximo de c\u00f3digo poss\u00edvel entre todas as implementa\u00e7\u00f5es; Utilizar struct ou class para agregar grupos de vari\u00e1veis que sempre s\u00e3o usadas junto (Exemplo: todos os dados de entrada do programa); Utilizar typdef para renomear tipos com nomes grandes. (Exemplo seria um vector de um struct ou pair ); Utilizar corretamente os recursos de C++. Em geral o que for apresentado em aula e n\u00e3o conflitar com os itens acima \u00e9 OK. Em geral c\u00f3digo copiado da internet n\u00e3o passa nesse quesito. Na d\u00favida pergunte.","title":"Checklist de projeto"},{"location":"projetos/checklist/#checklist-de-projeto","text":"Alguns requisitos de projeto b\u00e1sicos ser\u00e3o verificados em todas as entregas. O objetivo aqui \u00e9 evitar que uma evid\u00eancia importante de aprendizado deixe de ser enviada e prejudique a avalia\u00e7\u00e3o. N\u00e3o cumprir algum desses requisitos implica em reentrega valendo D . Script de compila\u00e7\u00e3o (CMake, Makefile, bash script). Relat\u00f3rio feito em Jupyter Notebook ou PWeave. Vers\u00e3o em PDF (ou HTML) do relat\u00f3rio Instru\u00e7\u00f5es para replicar os testes realizados. Se isto estiver incluso no relat\u00f3rio execut\u00e1vel basta indicar no texto. Se\u00e7\u00e3o explicando onde est\u00e1 e como usar o script de compila\u00e7\u00e3o.","title":"Checklist de projeto"},{"location":"projetos/checklist/#requisitos-de-qualidade","text":"Al\u00e9m dos requisitos acima, que s\u00e3o obrigat\u00f3rios, os seguintes itens procuram medir a qualidade da implementa\u00e7\u00e3o que voc\u00eas desenvolveram. Assim como explicado na aula 01, eles n\u00e3o reprovam, mas diminuem a nota de projeto. Cada item que n\u00e3o for cumprido implica em desconto de 1,0 na nota de projeto. Programa compila sem warnings quando compilado com g++ -O3 -Wall -pedantic -std=c++11 ; Programa n\u00e3o tem warnings detectados pelo clang-tidy . Veja este v\u00eddeo para um breve tutorial de uso; usar os checks read*,performance*,hicpp*,modern*,-modernize-use-trailing-return-type . N\u00e3o h\u00e1 repeti\u00e7\u00e3o desnecess\u00e1ria de c\u00f3digo; Implementaremos v\u00e1rias solu\u00e7\u00f5es para o mesmo problema. \u00c9 importante compartilhar o m\u00e1ximo de c\u00f3digo poss\u00edvel entre todas as implementa\u00e7\u00f5es; Utilizar struct ou class para agregar grupos de vari\u00e1veis que sempre s\u00e3o usadas junto (Exemplo: todos os dados de entrada do programa); Utilizar typdef para renomear tipos com nomes grandes. (Exemplo seria um vector de um struct ou pair ); Utilizar corretamente os recursos de C++. Em geral o que for apresentado em aula e n\u00e3o conflitar com os itens acima \u00e9 OK. Em geral c\u00f3digo copiado da internet n\u00e3o passa nesse quesito. Na d\u00favida pergunte.","title":"Requisitos de qualidade"},{"location":"projetos/heuristica/","text":"Heur\u00edstica da cidade mais pr\u00f3xima \u00b6 A primeira solu\u00e7\u00e3o para o proejeto da disciplina ser\u00e1 a cidade mais pr\u00f3xima . Come\u00e7ando na cidade 0 , selecione iterativamente a cidade mais pr\u00f3xima n\u00e3o visitada at\u00e9 fazer o tour completo \u00b6 Esta heur\u00edstica d\u00e1 bons resultados e pode ser implementada de maneira bastante eficiente. Avalia\u00e7\u00e3o de resultados \u00b6 Os arquivos in/out-*.txt na pasta heuristico representam a sa\u00edda esperada de seu programa para uma s\u00e9rie de entradas exemplo. Use o corretor seguindo as instru\u00e7\u00f5es neste link","title":"Heur\u00edstica da cidade mais pr\u00f3xima"},{"location":"projetos/heuristica/#heuristica-da-cidade-mais-proxima","text":"A primeira solu\u00e7\u00e3o para o proejeto da disciplina ser\u00e1 a cidade mais pr\u00f3xima .","title":"Heur\u00edstica da cidade mais pr\u00f3xima"},{"location":"projetos/heuristica/#comecando-na-cidade-0-selecione-iterativamente-a-cidade-mais-proxima-nao-visitada-ate-fazer-o-tour-completo","text":"Esta heur\u00edstica d\u00e1 bons resultados e pode ser implementada de maneira bastante eficiente.","title":"Come\u00e7ando na cidade 0, selecione iterativamente a cidade mais pr\u00f3xima n\u00e3o visitada at\u00e9 fazer o tour completo"},{"location":"projetos/heuristica/#avaliacao-de-resultados","text":"Os arquivos in/out-*.txt na pasta heuristico representam a sa\u00edda esperada de seu programa para uma s\u00e9rie de entradas exemplo. Use o corretor seguindo as instru\u00e7\u00f5es neste link","title":"Avalia\u00e7\u00e3o de resultados"}]}